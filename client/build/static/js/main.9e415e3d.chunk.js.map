{"version":3,"sources":["serviceWorker.ts","state.ts","constants/base-chord-rules.ts","core/services/navigation-service.ts","reducers/header-reducer.ts","components/loading.tsx","components/input.tsx","reducers/input-reducer.ts","core/services/input-debouncing-service.ts","core/services/timer-service.ts","reducers/toggle-reducer.ts","reducers/complete-request-reducer.ts","core/services/ajax-service.ts","resources/routes.ts","utils/cookies.ts","utils/memoizers.ts","reducers/recompute-chord-grid.ts","utils/mml-utils.ts","core/services/mouse-movements-service.ts","reducers/synth-tools-reducer.ts","utils/sound-utils.ts","core/services/sound-service.ts","core/services/external-input-service.ts","core/services/midi-service.ts","reducers/keyboard-reducer.ts","reducers/footer-reducer.ts","reducers/router-reducer.ts","reducers/stripe-reducer.ts","reducers/login-reducer.ts","core/services/stripe-service.ts","views/log-in/log-in.tsx","views/log-in/sign-in.tsx","views/log-in/reset-password.tsx","components/header-title.tsx","components/svgs.tsx","components/stripe-plans.tsx","components/stripe-subscription.tsx","components/stripe-form.tsx","views/home/user-info.tsx","views/home/account-settings.tsx","components/chord.tsx","views/chords/keyboard.tsx","components/parameter-button.tsx","views/chords/synth-tools.tsx","reducers/chord-grid-reducer.ts","components/note-key.tsx","components/page.tsx","views/chords/chords-page.tsx","views/chords/chord-grid.tsx","views/chords/chord-key-selector.tsx","reducers/song-page-reducer.ts","views/home/home-page.tsx","views/home/header.tsx","views/song/song-page.tsx","views/home/footer.tsx","views/root-page.tsx","views/log-in/sign-up-page.tsx","core/services/services.ts","reducers/recompute-all-notes.ts","core/root-reducer.ts","core/reducers.ts","react-root.tsx","index.tsx"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","AudioContext","webkitAudioContext","SAMPLE_RATE","sampleRate","initialState","audioContext","notes","selectedKeyIndex","undefined","chordRules","chordGrid","selectedGridChord","suggestedGridChords","suggestedKeyIndexes","chordMapperKeys","draftChords","loggedInUser","pathParts","headers","minimumPasswordLength","synth","base_octave","vco_signal","sound_on","base_frequency","cut_off_frequency","attack","release","id","user_id","limits","min","max","stripe","object","publishableKey","plans","chosenPlanID","inputs","lyric","mapKeyboardTo","outputSource","keyboardPresser","email","password","confirmPassword","newEmail","oldPassword","newPassword","confirmNewPassword","resetPasswordToken","toggles","showLogInModal","showTemporaryUserModal","showSettingsModal","changeEmail","changePassword","changeAccessToken","changeSubscription","isResettingPassword","keyboardMapPriorToInput","showStarChord","success","signIn","signUp","changeAccountSettings","errors","server","alerts","loadingRequests","songs","newSong","title","author","chordsAndLyrics","created_at","locationDefaults","pathname","search","hash","historyPush","effectType","visit","type","inferBasePath","tags","document","getElementsByTagName","length","href","split","slice","join","reduceHeader","action","effects","concat","page","Loading","props","className","Input","inputChangeDispatcher","dispatch","target","value","e","stopPropagation","text","inputChange","reduceInputs","a","setTimer","ms","toggle","on","toggleDispatcher","reduceToggle","result","stringifyRequestName","name","reduceCompleteRequest","response","JSON","parse","loadingRequest","requestAjax","completeRequest","requestEffect","status","when","Date","now","withAjax","queueSize","rootUrl","effect","normalizedName","requests","xhrQueue","configsQueue","executingCount","xhr","XMLHttpRequest","completeXhr","nextXhr","shift","nextConfig","executeXhrWithConfig","checkAndExecuteNext","onerror","onload","responseText","getAllResponseHeaders","ontimeout","push","withCredentials","open","method","getAjaxUrl","key","setRequestHeader","send","getAjaxBody","urlJoin","root","path","URL","toString","substring","url","query","parts","encodeURIComponent","indexOf","body","json","stringify","setCookie","expiryDays","d","setTime","getTime","expires","toUTCString","cookie","instanceTracker","last","obj","nestedTrackersObjectTracker","trackers","tracked","nestedTrackers","attributeTrackers","k","nestedTrackerResult","forEach","tracker","memoize","f","called","lastValue","func","arguments","apply","memoizeBySomeProperties","objectTracker","propertyTrackersFor","t","v","Array","isArray","empty","_","args","chordIdentifier","chord","baseKey","chordRuleIndex","variation","pitchClass","calculateMML","KEYS","recomputeChordGrid","map","chordRule","chordNotes","p","baseChord","octave","baseChordNotes","firstPitch","note","chordVariation","mml","pitch","toLowerCase","withMouseMovements","mouseMoveEventListener","mouseUpEventListener","removeEvents","removeEventListener","handleMouseUp","knobKey","preventDefault","stopImmediatePropagation","changeSynthAttribute","movementY","handleMouseMovement","addEventListener","changeOctave","change","synthKey","changeValue","reduceChordTools","updateSynthToolsRequestName","data","latest_synth","getLoggedInUserRequestName","userSignInRequestName","frequency","waveType","newValue","parseFloat","playSound","noteIndex","noteFrequency","osc1","createOscillator","biquadFilter","createBiquadFilter","gain","createGain","connect","destination","currentTime","endTime","attackTime","setValueAtTime","linearRampToValueAtTime","exponentialRampToValueAtTime","start","stop","playSoundEffect","USKeyboardMapperFirstRow","USKeyboardMapperSecondRow","KeyboardMapperFirstRow","KeyboardMapperSecondRow","acceptExternalInput","keyboardMap","withExternalInput","keydownEventListener","keyupEventListener","pressedKeyCodes","getKeyIndex","keyIndex","code","toggleKeyboardKey","selectSavedChord","handleKeyDown","handleKeyUp","parseMidiNote","midiNote","pianoNote","ChordMapperKeys","withMidiInput","midi","midiInputs","midiOutputs","clearMidiEvents","input","onmidimessage","onMIDIFailure","msg","onMIDIEvent","command","vel","stopMidiNoteAction","requestMIDIAccess","m","it","values","i","next","done","ot","outputs","o","setTimeout","changeKeyboardMap","scalePitchClass","scaledPitchClass","nextVariation","keysToPitchClass","keyIndexes","mapKeysToChord","mapKeyIndex","filter","chordPitchClass","baseKeyIndex","reduceChordMapper","selectChord","draftChord","tmpChordNotes","newPitch","includes","mapChordToKeys","toggleDraftChord","showStar","show","savedChordIndex","reduceFooter","splice","updateFavoriteChords","mmlFavoriteChords","favoriteChord","updateFavoriteChordRequestName","user","favorite_chords","getStripeData","getStripePublishableKeyRequestName","StripePath","stripe_subscription","plan","route","reduceNavigation","nextPathParts","AuthHeaders","header","RegExp","replace","getCookie","userId","Object","keys","parameters","confirmationToken","param","confirmEmailRequestName","confirmation_token","reduction","setStripeObject","stripeObject","reduceStripe","errorOnSignUp","chooseStripePlan","stripePlanId","EMAIL_REGEXP","setUser","userData","headersStr","regex","exec","parseHTTPHeadersToJSON","mmlChords","mmlChord","readingChord","chordNoteKeys","upperCaseKeys","mmlItem","parseInt","chordNote","toUpperCase","basePitch","parseMMLChords","resetUser","reduceLogin","userSignUpRequestName","stripeData","publishable_key","apiKey","changeEmailRequestName","changePasswordRequestName","generateNewAccessTokenRequestName","forgotPasswordRequestName","resetPasswordRequestName","cancelSubscriptionRequestName","changeSubscriptionRequestName","tokenId","errorType","message","validateStripeCard","validatePasswords","validateEmail","token_id","stripe_plan_id","stripe_token_id","resendConfirmationEmailRequestName","ApiV1UsersPath","old_password","reset_password_token","emailType","test","LogIn","SignInContent","dispatcher","goSignUp","resendConfirmationEmail","forgotPassword","changeKeyBoardMap","isResendingConfirmationEmail","onClick","autoComplete","onFocus","onBlur","onChange","SignIn","ResetPasswordContent","resetPassword","disabled","ResetPassword","HeaderTitle","SVGCheckMark","viewBox","width","height","opacity","fillOpacity","strokeWidth","strokeOpacity","SVGUser","data-name","xmlns","cx","cy","r","strokeMiterlimit","transform","SVGSoundOn","SVGSoundOff","points","SVGSine","fill","SVGTriangle","SVGSawtooth","SVGSquare","SVGPlus","x1","x2","y2","y1","SVGMinus","SVGStar","SVGChords","x","y","SVGSong","SVGOctave","SVGBack","stroke","StripePlans","stripePlan","symbol","amount","currency","interval","StripeSubscription","current_period_end","toLocaleDateString","Form","submit","bind","this","createToken","token","onSubmit","onError","errorMessage","isLoadingRequest","loadingMessage","submitMessage","React","FormContent","injectStripe","StripeForm","UserInfoModal","signOut","AccountSettingsContent","generateNewAccessToken","cancelSubscription","StripePlansContent","editingSettingsKey","isSubscriptionActive","access_token","AccountSettings","ChordElement","clickHandled","onClickEnd","onSelect","normalize","minX","maxX","minY","maxY","getColor","totalFrequency","Math","sin","cos","normalizedFreq","floor","highlightColor","isSelected","isSuggested","onMouseDown","onMouseUp","onTouchStart","onMouseEnter","onHover","onMouseLeave","isStarred","onStar","children","SelectedKeyIndicator","ComputerKeyboardKey","firstRowKey","index","letter","trim","ParameterButton","Knob","activateKnob","style","Slider","bottom","deepEqual","obj1","obj2","reduceChordCanvas","NoteKey","selectKey","Page","ChordsPage","ChordToolsContent","decreaseOctave","increaseOctave","changeBaseFrequency","freq","selectWaveType","toggleSound","saveSynthTools","WaveType","currentWaveType","octaves","SynthTools","ChordCanvasContent","selectChordAction","chordIndex","variations","c","soundOn","ChordGrid","ChordKeySelectorContent","ChordKeySelector","KeyboardContent","toggleChordMapperKey","changeKeyBoardPresser","changeKeyboardPresser","clearKeyboard","keyboardMappers","outputSources","keyboardPressers","color","blackKey","whiteKey","Keyboard","reduceSongPage","HomePage","HeaderContent","goToHomePage","LogInContent","UserInfoModalContent","showUserModal","Header","ChordPageContent","SongPageContent","addChordAndLyric","songId","chordAndLyric","SongPage","FooterContent","savedChord","s","Footer","RootPage","HomeContent","SignUpContent","choosePlan","SignUpPage","createBrowserHistory","require","getCoreServices","services","history","listen","withHistory","basename","getStripeTimeout","Stripe","getStripeScript","stripeScript","querySelector","clearTimeout","withStripe","withTimer","recomputeAllNotes","n","pow","subReducer","reducer","computed","compute","ReactRoot","reduceActions","chainer","reducerChain","rootReducer","reduceEffects","service","oldState","setState","RootPageContent","Component","ReactDOM","render","getElementById","process","origin","fetch","contentType","get","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9e415e3d.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Services worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {BASE_CHORD_RULES} from \"./constants/base-chord-rules\";\nimport {ChordRuleType, ChordType} from \"./reducers/recompute-chord-grid\";\nimport {UserResource} from \"./resources/user-resource\";\nimport {PathPart} from \"./reducers/router-reducer\";\nimport {SongResource} from \"./resources/song-resource\";\nimport {StripePlanResource} from \"./resources/stripe-resource\";\nimport {ResponseError} from \"./reducers/login-reducer\";\nimport {KeyBoardMapType, KeyBoardPressType} from \"./reducers/keyboard-reducer\";\nimport {SynthResource} from \"./resources/synth-resource\";\nimport {OutputSource} from \"./core/services/midi-service\";\n\nlet AudioContext = (window as any).AudioContext // Default\n  || (window as any).webkitAudioContext // Safari and old versions of Chrome\n  || false;\n\nconst SAMPLE_RATE = AudioContext && new AudioContext().sampleRate;\n\nexport type ToggleMap = { [k: number]: boolean }\n\nconst loginPageInputs = {\n  email: \"\",\n  password: \"\",\n  confirmPassword: \"\",\n};\n\nconst accountSettingsInputs = {\n  newEmail: \"\",\n  oldPassword: \"\",\n  newPassword: \"\",\n  confirmNewPassword: \"\",\n  resetPasswordToken: \"\",\n};\n\nexport const initialState = {\n  audioContext: AudioContext && new AudioContext(),\n  notes: [] as number[],\n  selectedKeyIndex: undefined as number | void,\n  chordRules: BASE_CHORD_RULES as ChordRuleType[],\n  chordGrid: [] as ChordType[],\n  selectedGridChord: undefined as ChordType | void,\n  suggestedGridChords: [] as ChordType[],\n  suggestedKeyIndexes: [] as number[],\n  chordMapperKeys: [] as boolean[],\n  draftChords: [] as (ChordType|void)[],\n  loggedInUser: undefined as UserResource | void,\n  pathParts: [] as PathPart[],\n  headers: {} as { [k: string]: string },\n  minimumPasswordLength: 6,\n\n  synth: {\n    base_octave: 2,\n    vco_signal: \"sawtooth\" as OscillatorType,\n    sound_on: true,\n    base_frequency: 440,\n    cut_off_frequency: 350,\n    attack: 0.0001,\n    release: 1.5,\n\n    id: undefined,\n    user_id: undefined\n  } as SynthResource,\n\n  limits: {\n    cut_off_frequency: {\n      min: 10,\n      max: 1500 > SAMPLE_RATE ? SAMPLE_RATE : 1500\n    },\n    attack: {\n      min: 0,\n      max: 1\n    },\n    release: {\n      min: 0,\n      max: 10\n    },\n  },\n\n  stripe: {\n    object: undefined as stripe.Stripe | void,\n    publishableKey: undefined as string | void,\n    plans: [] as StripePlanResource[],\n    chosenPlanID: undefined as string | void,\n  },\n\n  inputs: {\n    lyric: \"\",\n    mapKeyboardTo: 'keys' as KeyBoardMapType,\n    outputSource: 'midi' as OutputSource,\n    keyboardPresser: 'live' as KeyBoardPressType,\n    ...loginPageInputs,\n    ...accountSettingsInputs,\n  },\n\n  toggles: {\n    showLogInModal: false,\n    showTemporaryUserModal: false,\n    showSettingsModal: false,\n    changeEmail: false,\n    changePassword: false,\n    changeAccessToken: false,\n    changeSubscription: false,\n    isResettingPassword: false\n  },\n\n  keyboardMapPriorToInput: 'keys' as KeyBoardMapType,\n\n  showStarChord: undefined as ChordType | void,\n\n  success: {\n    signIn: \"\",\n    signUp: \"\",\n    changeAccountSettings: \"\"\n  },\n  errors: {\n    signIn: [] as ResponseError[],\n    signUp: [] as ResponseError[],\n    changeAccountSettings: [] as ResponseError[],\n    server: [] as ResponseError[],\n  },\n  alerts: {\n    signIn: \"\"\n  },\n\n  loadingRequests: {} as { [k: string]: boolean },\n\n  songs: [] as SongResource[],\n  newSong: {\n    id: undefined as unknown as number,\n    user_id: \"\",\n    title: \"\",\n    author: \"\",\n    chordsAndLyrics: [],\n    created_at: undefined as string | void\n  } as SongResource,\n\n};\n\nexport type State = typeof initialState;\nexport type Inputs = typeof initialState.inputs;\nexport type Toggles = typeof initialState.toggles;\n","export const BASE_CHORD_RULES = [\n  {\"name\": \"Dominant\", \"pitchClass\": [0, 4, 7], \"quality\": \"Major\", \"symbol\": \"\"},\n  {\"name\": \"Minor \", \"pitchClass\": [0, 3, 7], \"quality\": \"Minor\", \"symbol\": \"m\"},\n  {\"name\": \"Dominant seventh \", \"pitchClass\": [0, 4, 7, 10], \"quality\": \"Major\", \"symbol\": \"7\"},\n  {\"name\": \"Minor seventh \", \"pitchClass\": [0, 3, 7, 10], \"quality\": \"Minor\", \"symbol\": \"m7\"},\n  {\"name\": \"Major sixth \", \"pitchClass\": [0, 4, 7, 9], \"quality\": \"Major\", \"symbol\": \"M6\"},\n  {\"name\": \"Minor sixth \", \"pitchClass\": [0, 3, 7, 9], \"quality\": \"Minor\", \"symbol\": \"m6\"},\n  {\"name\": \"Major seventh \", \"pitchClass\": [0, 4, 7, 11], \"quality\": \"Major\", \"symbol\": \"M7\"},\n  {\"name\": \"Minor major seventh \", \"pitchClass\": [0, 3, 7, 11], \"quality\": \"Minor\", \"symbol\": \"mM7\"},\n  {\"name\": \"Dominant ninth\", \"pitchClass\": [0, 4, 7, 10, 2], \"quality\": \"Major\", \"symbol\": \"9\"},\n  {\"name\": \"Minor ninth \", \"pitchClass\": [0, 3, 7, 10, 2], \"quality\": \"Minor\", \"symbol\": \"m9\"},\n  {\"name\": \"Added ninth\", \"pitchClass\": [0, 4, 7, 2], \"quality\": \"Major\", \"symbol\": \"add9\"},\n  {\"name\": \"Suspended Fourth\", \"pitchClass\": [0, 5, 7], \"quality\": \"Suspended\", \"symbol\": \"sus4\"},\n  {\"name\": \"Suspended Second\", \"pitchClass\": [0, 2, 7], \"quality\": \"Suspended\", \"symbol\": \"sus2\"},\n  {\"name\": \"Seventh suspension four \", \"pitchClass\": [0, 5, 7, 10], \"quality\": \"Suspended\", \"symbol\": \"7sus4\"},\n  {\"name\": \"Augmented \", \"pitchClass\": [0, 4, 8], \"quality\": \"Augmented\", \"symbol\": \"aug\"},\n  {\"name\": \"Diminished \", \"pitchClass\": [0, 3, 6], \"quality\": \"Diminished\", \"symbol\": \"dim\"},\n  {\"name\": \"Augmented seventh \", \"pitchClass\": [0, 4, 8, 10], \"quality\": \"Augmented\", \"symbol\": \"aug7\"},\n  {\"name\": \"Diminished seventh  \", \"pitchClass\": [0, 3, 6, 9], \"quality\": \"Diminished\", \"symbol\": \"dim7\"},\n  {\"name\": \"Augmented major seventh \", \"pitchClass\": [0, 4, 8, 11], \"quality\": \"Augmented\", \"symbol\": \"augM7\"},\n  {\"name\": \"Diminished major seventh \", \"pitchClass\": [0, 3, 6, 11], \"quality\": \"Diminished\", \"symbol\": \"dimM7\"},\n\n  {\"name\": \"Augmented eleventh \", \"pitchClass\": [0, 4, 7, 10, 2, 6], \"quality\": \"Major\", \"symbol\": \"aug11\"},\n  {\"name\": \"Augmented sixth \", \"pitchClass\": [0, 6, 10], \"quality\": \"Predominant\", \"symbol\": \"aug6\"},\n  {\"name\": \"Dominant eleventh \", \"pitchClass\": [0, 4, 7, 10, 2, 5], \"quality\": \"Major\", \"symbol\": \"11\"},\n  {\"name\": \"Dominant minor ninth\", \"pitchClass\": [0, 4, 7, 10, 1], \"quality\": \"Major\", \"symbol\": \"7b9\"},\n  {\"name\": \"Dominant seventh flat five \", \"pitchClass\": [0, 4, 6, 10], \"quality\": \"Diminished\", \"symbol\": \"7b5\"},\n  {\"name\": \"Dominant seventh sharp nine / Hendrix \", \"pitchClass\": [0, 4, 7, 10, 3], \"quality\": \"Major\", \"symbol\": \"7#9\"},\n  {\"name\": \"Dominant thirteenth \", \"pitchClass\": [0, 4, 7, 10, 2, 5, 9], \"quality\": \"Major\", \"symbol\": \"13\"},\n  {\"name\": \"Half-diminished seventh \", \"pitchClass\": [0, 3, 6, 10], \"quality\": \"Diminished\", \"symbol\": \"ø7\"},\n  {\"name\": \"Major eleventh \", \"pitchClass\": [0, 4, 7, 11, 2, 5], \"quality\": \"Major\", \"symbol\": \"M11\"},\n  {\"name\": \"Major seventh sharp eleventh \", \"pitchClass\": [0, 4, 8, 11, 6], \"quality\": \"Augmented\", \"symbol\": \"M7#11\"},\n  {\"name\": \"Major sixth ninth \", \"pitchClass\": [0, 4, 7, 9, 2], \"quality\": \"Major\", \"symbol\": \"M6add9\"},\n  {\"name\": \"Major ninth \", \"pitchClass\": [0, 4, 7, 11, 2], \"quality\": \"Major\", \"symbol\": \"M9\"},\n  {\"name\": \"Major thirteenth \", \"pitchClass\": [0, 4, 7, 11, 2, 6, 9], \"quality\": \"Major\", \"symbol\": \"M13\"},\n  {\"name\": \"Minor eleventh \", \"pitchClass\": [0, 3, 7, 10, 2, 5], \"quality\": \"Minor\", \"symbol\": \"m11\"},\n  {\"name\": \"Minor sixth ninth  \", \"pitchClass\": [0, 3, 7, 9, 2], \"quality\": \"Minor\", \"symbol\": \"m6add9\"},\n  {\"name\": \"Minor thirteenth \", \"pitchClass\": [0, 3, 7, 10, 2, 5, 9], \"quality\": \"Minor\", \"symbol\": \"m13\"},\n  {\"name\": \"Mu \", \"pitchClass\": [0, 2, 4, 7], \"quality\": \"Major\", \"symbol\": \"mu\"},\n  {\"name\": \"Ninth augmented fifth \", \"pitchClass\": [0, 4, 8, 10, 2], \"quality\": \"Augmented\", \"symbol\": \"9aug5\"},\n  {\"name\": \"Ninth flat fifth \", \"pitchClass\": [0, 4, 6, 10, 2], \"quality\": \"M3,+d5,\", \"symbol\": \"9b5\"},\n  {\"name\": \"Power \", \"pitchClass\": [0, 7], \"quality\": \"Indeterminate\", \"symbol\": \"P\"},\n  {\"name\": \"Seven six \", \"pitchClass\": [0, 4, 7, 9, 10], \"quality\": \"Major\", \"symbol\": \"7/6\"},\n\n  {\"name\": \"Thirteenth flat ninth \", \"pitchClass\": [0, 4, 7, 10, 1, 9], \"quality\": \"Major\", \"symbol\": \"13b9\"},\n  {\"name\": \"Thirteenth flat ninth flat fifth \", \"pitchClass\": [0, 4, 6, 10, 1, 9], \"quality\": \"M3+d5\", \"symbol\": \"13b9b5\"},\n\n  // {\"name\": \"Dream \", \"pitchClass\": [0, 5, 6, 7], \"quality\": \"Just\", \"symbol\": \"dream\"},\n  // {\"name\": \"Elektra \", \"pitchClass\": [0, 7, 9, 1, 4], \"quality\": \"Bitonal\", \"symbol\": \"elektra\"},\n  // {\"name\": \"Farben \", \"pitchClass\": [0, 8, 11, 4, 9], \"quality\": \"Atonal\", \"symbol\": \"farben\"},\n  // {\"name\": \"Lydian \", \"pitchClass\": [0, 4, 7, 11, 6], \"quality\": \"Major\", \"symbol\": \"lydian\"},\n  // {\"name\": \"Magic \", \"pitchClass\": [0, 1, 5, 6, 10, 0, 3, 5], \"quality\": \"Just\", \"symbol\": \"magic\"},\n  // {\"name\": \"Mystic \", \"pitchClass\": [0, 6, 10, 4, 9, 2], \"quality\": \"Atonal\", \"symbol\": \"mystic\"},\n  // {\"name\": \"Neapolitan \", \"pitchClass\": [1, 5, 8], \"quality\": \"Major\", \"symbol\": \"neapolitan\"},\n  // {\"name\": \"Northern lights \", \"pitchClass\": [1, 2, 8, 0, 3, 6, 7, 10, 11, 4, 7], \"quality\": \"Atonal\", \"symbol\": \"northern lights\"},\n  // {\"name\": \"Ode-to-Napoleon hexa\", \"pitchClass\": [0, 1, 4, 5, 8, 9], \"quality\": \"Atonal\", \"symbol\": \"ode-to-napoleon\"},\n  // {\"name\": \"Petrushka \", \"pitchClass\": [0, 1, 4, 6, 7, 10], \"quality\": \"Bitonal\", \"symbol\": \"petrushka\"},\n  // {\"name\": \"So What \", \"pitchClass\": [0, 5, 10, 3, 7], \"quality\": \"Bitonal\", \"symbol\": \"so what\"},\n  // {\"name\": \"Viennese tri v1\", \"pitchClass\": [0, 1, 6], \"quality\": \"Atonal\", \"symbol\": \"vienesse tri1\"},\n  // {\"name\": \"Viennese tri v2\", \"pitchClass\": [0, 6, 7], \"quality\": \"Atonal\", \"symbol\": \"vienesse tri2\"}\n];","import { ReductionWithEffect } from \"../reducers\";\nimport { Effect, Services } from \"./services\";\nimport { Action } from \"../root-reducer\";\n\nexport interface PathLocation {\n  pathname: string,\n  search: string,\n  hash: string,\n}\n\nexport interface HistoryPush {\n  effectType: 'history-push',\n  location: PathLocation\n}\n\nconst locationDefaults: PathLocation = {\n  pathname: \"\",\n  search: \"\",\n  hash: \"\",\n};\n\nexport function historyPush(location: Partial<PathLocation>): HistoryPush {\n  return { effectType: \"history-push\", location: { ...locationDefaults, ...location } }\n}\n\nexport type NavigationActions = Visit | LinkClick\nexport type NavigationEffect = HistoryPush;\n\nexport type Visit = {\n  type: 'visit',\n  noHistory?: boolean,\n  location: PathLocation\n}\n\nexport function visit(location: Partial<PathLocation>): Visit {\n  return { type: \"visit\", location: { ...locationDefaults, ...location } };\n}\n\nexport type LinkClick = {\n  type: 'link-click',\n  location: PathLocation\n}\n\nexport function linkClick(location: PathLocation): LinkClick {\n  let { pathname, search, hash } = location;\n  return {\n    type: 'link-click',\n    location: { pathname, search, hash }\n  }\n}\n\nexport interface HistoryProvider {\n  push(location: PathLocation): void\n  listen(callback: (location: PathLocation, action: string) => void): () => void\n  location: PathLocation\n}\n\nexport function withHistory(dispatch: (action: Action) => void, history: HistoryProvider): Services {\n\n  history.listen((location, action) => {\n    dispatch(visit(location));\n  });\n\n  return (effect: Effect) => {\n    switch (effect.effectType) {\n      case 'history-push':\n        history.push(effect.location);\n        break;\n    }\n  }\n}\n\nexport function navigationReducer<State extends Object>(route: (state: State,\n  pathLocation: PathLocation) => ReductionWithEffect<State>) {\n  return (state: State, action: Action): ReductionWithEffect<State> => {\n    let effects: Effect[] = [];\n\n    switch (action.type) {\n      case 'visit':\n        let reduction = route(state, action.location);\n        if (reduction.effects) {\n          effects = effects.concat(reduction.effects);\n        }\n        state = reduction.state;\n        break;\n\n      case 'link-click':\n        effects = effects.concat(historyPush(action.location));\n        break;\n    }\n\n    return { state, effects };\n  }\n}\n\nexport function inferBasePath(): string {\n  let tags = document.getElementsByTagName(\"BASE\");\n  if (tags.length === 0) return \"/\";\n\n  let parts = (tags[tags.length - 1] as HTMLBaseElement).href.split(\"/\");\n  return \"/\" + parts.slice(3).join(\"/\");\n}\n\nexport function visitDispatcher(dispatch: (a: Action) => void) {\n  return ((event: { preventDefault(): void, target: any }) => {\n    let anchorElement = (event.target as HTMLAnchorElement);\n\n    while (anchorElement.parentElement && anchorElement.tagName !== \"A\") {\n      anchorElement = anchorElement.parentElement as HTMLAnchorElement;\n    }\n\n    let { pathname, search, hash } = anchorElement;\n\n    if (pathname[0] !== '/') pathname = '/' + pathname;\n\n    let basePath = inferBasePath();\n    if (pathname.slice(0, basePath.length) === basePath) {\n      pathname = \"/\" + pathname.slice(basePath.length);\n    }\n\n    dispatch(linkClick({ pathname, search, hash }));\n    event.preventDefault();\n  });\n}","import { State } from \"../state\";\nimport { ReductionWithEffect } from \"../core/reducers\";\nimport { Action } from \"../core/root-reducer\";\nimport { historyPush } from \"../core/services/navigation-service\";\nimport { Effect } from \"../core/services/services\";\nimport { PathPart } from \"./router-reducer\";\n\nexport type GoToHomePageAction = {\n  type: \"go-to-home-page\"\n  page: PathPart\n}\n\nexport const goToHomePage = (page: PathPart): GoToHomePageAction => {\n  return {\n    type: \"go-to-home-page\",\n    page\n  };\n};\n\n\nexport type HeaderActions =\n  | GoToHomePageAction;\n\n\nexport const reduceHeader = (state: State, action: Action): ReductionWithEffect<State> => {\n  let effects: Effect[] = [];\n  switch (action.type) {\n\n    case \"go-to-home-page\": {\n      effects = effects.concat(historyPush({ pathname: \"/home/\" + action.page }));\n      break;\n    }\n\n  }\n\n  return { state, effects };\n};","import * as React from \"react\";\nimport {ClassAndChildren} from \"../core/reducers\";\n\nexport function Loading(props: ClassAndChildren) {\n  return <div className={\"lds-ring \" + props.className}>\n    <div/>\n    <div/>\n    <div/>\n    <div/>\n  </div>\n}","import * as React from \"react\";\nimport {EventInput} from \"../reducers/input-reducer\";\nimport {ClassAndChildren} from \"../core/reducers\";\n\nexport interface InputProps extends ClassAndChildren{\n  type?: string\n  value: string\n  onChange: (e: EventInput) => void\n  autoComplete?: string\n  disabled?: boolean\n  onFocus: (e) => void\n  onBlur: (e) => void\n}\n\nexport const Input = (props: InputProps) => {\n  return <input {...props} className={`pa2 mv2 ba br3 b--moon-gray ${props.className}`}/>\n};\n","import { Inputs } from \"../state\";\nimport { ReductionWithEffect } from \"../core/reducers\";\nimport { clearInputDebouncing } from \"../core/services/input-debouncing-service\";\nimport { Action } from \"../core/root-reducer\";\nimport { Effect } from \"../core/services/services\";\n\nexport type InputChange = {\n  type: \"input-change\"\n  target: Extract<keyof Inputs, string>\n  text: string\n}\n\nexport const inputChange = (target: Extract<keyof Inputs, string>, text: string): InputChange => {\n  return {\n    type: \"input-change\",\n    target,\n    text\n  };\n};\n\nexport function inputChangeDispatcher(dispatch: (a: Action) => void,\n  target: Extract<keyof Inputs, string>, value?: string) {\n  return (e: EventInput) => {\n    e.stopPropagation();\n    dispatch(inputChange(target, value === undefined ? e.target.value : value));\n  }\n}\n\nexport interface EventInput {\n  stopPropagation: () => void,\n  target: any\n}\n\nexport interface InputMap {\n  [k: string]: string\n}\n\nexport function reduceInputs<T extends InputMap>(state: InputMap, a: Action): ReductionWithEffect<T> {\n  let effects: Effect[] = [];\n  switch (a.type) {\n    case 'input-change':\n      effects = effects.concat(clearInputDebouncing());\n      if (state[a.target] === a.text) break;\n      state = { ...state };\n      state[a.target] = a.text;\n      break;\n  }\n\n  return { state: state as T, effects };\n}","import {Action} from \"../root-reducer\";\nimport {Effect} from \"./services\";\n\nexport const clearInputDebouncingEventName = \"clear-input-debouncing\";\n\nexport interface ClearInputDebouncing {\n  effectType: \"clear-input-debouncing\"\n}\n\nexport function clearInputDebouncing(): ClearInputDebouncing {\n  return {effectType: \"clear-input-debouncing\"};\n}\n\nexport const withInputDebouncing = (dispatch: (action: Action) => void) => {\n  return (effect: Effect) => {\n    switch (effect.effectType) {\n      case \"clear-input-debouncing\":\n        document.dispatchEvent(new Event(clearInputDebouncingEventName));\n        break;\n    }\n  }\n};","import {Effect, Services} from \"./services\";\nimport {Action} from \"../root-reducer\";\n\nexport interface SetTimerEffect {\n  effectType: \"set-timer\"\n  action: Action\n  ms: number\n}\n\nexport function setTimer(action: Action, ms: number): SetTimerEffect {\n  return {\n    effectType: \"set-timer\",\n    action,\n    ms\n  }\n}\n\nexport function withTimer(dispatch: (action: Action) => void): Services {\n  return (effect: Effect) => {\n\n    switch (effect.effectType) {\n      case \"set-timer\":\n          setTimeout(() => dispatch(effect.action), effect.ms);\n        break;\n    }\n\n  }\n}\n","import {ReductionWithEffect} from \"../core/reducers\";\nimport {Action} from \"../core/root-reducer\";\nimport {Toggles} from \"../state\";\n\nexport interface Toggle<T = ToggleMap> {\n  type: 'toggle',\n  target: Extract<keyof T, string>,\n  on?: boolean | void\n}\n\nexport function toggle<T = ToggleMap>(target: Extract<keyof T, string>, on = undefined as boolean | void): Toggle<T> {\n  return {type: \"toggle\", on, target};\n}\n\nexport function toggleDispatcher(dispatch: (a: Toggle<Toggles>) => void,\n                                                target: Extract<keyof Toggles, string>,\n                                                on = undefined as boolean | void) {\n  return (e?: { stopPropagation: () => void }) => {\n    if (e) {\n      e.stopPropagation();\n    }\n    dispatch(toggle<Toggles>(target, on));\n  }\n}\n\nexport interface ToggleMap {\n  [k: string]: boolean\n}\n\nexport type ToggleAction<T = ToggleMap> = Toggle<T>\n\nexport function reduceToggle<T extends ToggleMap>(state: ToggleMap, action: Action): ReductionWithEffect<T> {\n  switch (action.type) {\n    case 'toggle':\n      let result: boolean;\n      if (action.on != null) {\n        result = !!action.on;\n      }\n      else {\n        result = !state[action.target];\n      }\n\n      if (result !== !!state[action.target]) {\n        state = {...state} as T;\n        state[action.target] = result;\n      }\n      break;\n\n  }\n  return {state: state as T};\n}","import {initialState, State, Toggles} from \"../state\";\nimport {ReductionWithEffect} from \"../core/reducers\";\nimport {Action} from \"../core/root-reducer\";\nimport {setTimer} from \"../core/services/timer-service\";\nimport {toggle} from \"./toggle-reducer\";\nimport {Effect} from \"../core/services/services\";\n\nexport const stringifyRequestName = (name: string[]) => {\n  return name.join('-');\n};\n\nexport const reduceCompleteRequest = (state: State, action: Action): ReductionWithEffect<State> => {\n  let effects: Effect[] | void = [];\n  switch (action.type) {\n\n    case \"complete-request\": {\n      state = {...state};\n      state.loadingRequests = {...state.loadingRequests};\n      delete state.loadingRequests[stringifyRequestName(action.name)];\n\n      const response = JSON.parse(action.response);\n\n      if (action.success) {\n        state.errors = initialState.errors;\n        //TODO save according to type using indexer\n      } else {\n        state.success = initialState.success;\n        state.errors = {...state.errors};\n        state.errors.server = response.errors;\n\n        state.toggles = {...state.toggles};\n        state.toggles.showTemporaryUserModal = true;\n        effects = effects.concat(setTimer(toggle<Toggles>(\"showTemporaryUserModal\", false), 1500))\n      }\n      break;\n    }\n\n\n    case \"loading-request\":\n      state = {...state};\n      state.loadingRequests = {...state.loadingRequests};\n      state.loadingRequests[stringifyRequestName(action.name)] = true;\n      break;\n  }\n\n  return {state, effects};\n};","import { Effect, Services } from \"./services\";\nimport { Action } from \"../root-reducer\";\n\nexport interface AjaxConfig {\n  url: string\n  method: \"POST\" | \"GET\" | \"PUT\" | \"DELETE\" | \"PATCH\"\n  json?: Object\n  query?: { [k: string]: string | number }\n  body?: string\n  headers: { [k: string]: string }\n}\n\nexport type LoadingRequest = {\n  type: \"loading-request\"\n  name: string[]\n}\n\nexport function loadingRequest(name: string[]): LoadingRequest {\n  return {\n    type: \"loading-request\",\n    name: name,\n  }\n}\n\nexport interface RequestAjaxEffect {\n  effectType: \"request-ajax\"\n  name: string[]\n  config: AjaxConfig\n}\n\nexport function requestAjax(name: string[], config: AjaxConfig): RequestAjaxEffect {\n  return {\n    effectType: \"request-ajax\",\n    name,\n    config\n  }\n}\n\nexport type CompleteRequestAction = {\n  type: \"complete-request\"\n  name: string[]\n  success: boolean\n  status: number\n  response: string\n  headers: string\n  when: number\n}\n\nexport type AjaxAction = CompleteRequestAction | LoadingRequest;\n\nexport function completeRequest(requestEffect: RequestAjaxEffect,\n  status: number, response: string,\n  headers: string, when = Date.now()): CompleteRequestAction {\n  return {\n    type: \"complete-request\",\n    name: requestEffect.name,\n    success: status >= 200 && status < 300,\n    status: status,\n    response: response,\n    headers: headers,\n    when\n  }\n}\n\nexport function withAjax(dispatch: (action: Action) => void, queueSize = 6, rootUrl = \"\"): Services {\n  return (effect: Effect) => {\n    let requests = {} as { [k: string]: XMLHttpRequest };\n    let canceled = false;\n    let xhrQueue: XMLHttpRequest[] = [];\n    let configsQueue: AjaxConfig[] = [];\n    let executingCount: number = 0;\n\n    const checkAndExecuteNext = () => {\n      if (canceled) return;\n\n      while (executingCount < queueSize && xhrQueue.length && configsQueue.length) {\n        let nextXhr = xhrQueue.shift();\n        let nextConfig = configsQueue.shift();\n\n        executingCount++;\n        if (nextConfig && nextXhr) {\n          executeXhrWithConfig(nextConfig, nextXhr, rootUrl);\n        }\n      }\n    };\n\n    let normalizedName: string;\n\n    switch (effect.effectType) {\n      case \"request-ajax\":\n        normalizedName = effect.name.join(\"-\");\n\n        dispatch(loadingRequest(effect.name));\n\n        let xhr = requests[normalizedName] = new XMLHttpRequest();\n\n        const completeXhr = () => {\n          executingCount--;\n          if (requests[normalizedName] === xhr) {\n            delete requests[normalizedName];\n          }\n\n          if (canceled) return;\n\n          checkAndExecuteNext();\n        };\n\n        xhr.onerror = function () {\n          completeXhr();\n\n          dispatch(completeRequest(effect, 0, \"\", \"\"));\n        };\n\n        xhr.onload = function () {\n          completeXhr();\n\n          dispatch(completeRequest(effect, xhr.status, xhr.responseText, xhr.getAllResponseHeaders()));\n        };\n\n        xhr.ontimeout = function () {\n          completeXhr();\n\n          dispatch(completeRequest(effect, 408, \"\", \"\"));\n        };\n\n        if (executingCount < queueSize) {\n          executingCount++;\n          executeXhrWithConfig(effect.config, xhr, rootUrl);\n        } else {\n          xhrQueue.push(xhr);\n          configsQueue.push(effect.config);\n        }\n    }\n  }\n}\n\nexport const parseHTTPHeadersToJSON = (headersStr: string) => {\n  let headers: { [k: string]: string } = {};\n  const regex = /([\\w-]+): (.*)/g;\n\n  let header;\n  while (!!(header = regex.exec(headersStr))) {\n    headers[header[1]] = header[2];\n  }\n\n  return headers;\n};\n\nexport function executeXhrWithConfig(config: AjaxConfig, xhr: XMLHttpRequest, rootUrl = \"\") {\n  xhr.withCredentials = false;\n\n  xhr.open(config.method, getAjaxUrl(config, rootUrl), true);\n\n  const headers: { [k: string]: string } = {\n    ...config.headers, ...{\n      \"Accept\": \"application/json\",\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  if (headers) {\n    for (let key in headers) {\n      xhr.setRequestHeader(key, headers[key]);\n    }\n  }\n\n  xhr.send(getAjaxBody(config));\n}\n\nexport function urlJoin(root: string, path: string): string {\n  if (!root) return path;\n  if (!path) return root;\n  if (typeof URL === 'function') {\n    return new URL(path, root).toString();\n  } else {\n    if (root[root.length - 1] !== '/') {\n      root += '/';\n    }\n    if (path[0] === '/') {\n      path = path.substring(1);\n    }\n    return root + path;\n  }\n}\n\nexport function getAjaxUrl(config: AjaxConfig, rootUrl = \"\"): string {\n  let url = urlJoin(rootUrl, config.url);\n\n  const query = config.query;\n  if (query) {\n    let parts = [] as string[];\n    for (let key in query) {\n      parts.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(query[key] as string));\n    }\n\n    if (parts.length) url += (url.indexOf(\"?\") === -1 ? \"?\" : \"&\") + parts.join(\"&\");\n  }\n\n  return url;\n}\n\nexport function getAjaxBody(config: AjaxConfig): string | null {\n  if (config.body) return config.body;\n  if (config.json) return JSON.stringify(config.json);\n  return null;\n}\n","export const AuthSignIn = \"/api/v1/users/sign_in\";\nexport const AuthConfirmEmail = \"/api/v1/users/confirm_email\";\nexport const AuthSignUp = \"/api/v1/users\";\nexport const AuthResendConfirmationEmail = \"/api/v1/users/resend_confirmation_email\";\nexport const ApiV1UsersPath = \"/api/v1/users\";\nexport const ApiV1SynthPath = \"/api/v1/synths\";\nexport const StripePath = \"/stripe\";\n","export const getCookie = (name: string): string | void => {\n  var match = document.cookie.match(RegExp('(?:^|;\\\\s*)' + name.replace(/([.*+?^${}()|[\\]/\\\\])/g, '\\\\$1') + '=([^;]*)'));\n  return match ? match[1] : undefined;\n};\n\nexport const setCookie = (name: string, value: string, expiryDays = 365) => {\n  let d = new Date();\n  d.setTime(d.getTime() + 1000 * 60 * 60 * 24 * expiryDays);\n  let expires = \"expires=\" + d.toUTCString();\n\n  document.cookie = name + \"=\" + value + \";\" + expires + \";path=/\";\n};","interface IArr<T> {\n  [i: number]: T, length: number\n}\n\nexport type ObjectChangeTracker<T> = (t: T) => boolean\n\nexport function arrayContentsTracker<T>(tracked = undefined as unknown as IArr<T>) {\n  return (arr: IArr<T>) => {\n    if (tracked === arr) return false;\n\n    try {\n      if (tracked == null || arr == null) return true;\n\n      if (tracked.length !== arr.length) {\n        return true;\n      }\n\n      for (let i = 0; i < tracked.length; ++i) {\n        if (tracked[i] !== arr[i]) {\n          return true;\n        }\n      }\n\n      return false;\n    } finally {\n      tracked = arr;\n    }\n  }\n}\n\nexport function instanceTracker<T>(last = undefined as unknown as T): ObjectChangeTracker<T> {\n  return (obj: T) => {\n    if (obj === last) return false;\n    last = obj;\n    return true;\n  }\n}\n\nexport function objectContentsTracker<T extends Object>(tracked = undefined as unknown as T): ObjectChangeTracker<T> {\n  return (obj: T) => {\n    if (tracked === obj) return false;\n\n    try {\n      if (tracked == null || obj == null) return true;\n\n      for (var k in tracked) {\n        if (tracked[k] !== obj[k]) return true;\n      }\n\n      for (k in obj) {\n        if (tracked[k] !== obj[k]) return true;\n      }\n\n      return false;\n    } finally {\n      tracked = obj;\n    }\n  }\n}\n\nexport type PropertyTrackers<O> = {[P in keyof O]: ObjectChangeTracker<O[P]>};\n\nexport function nestedTrackersObjectTracker<T extends Object>(trackers: PropertyTrackers<T>, tracked = undefined as unknown as T) {\n  let nestedTrackers = [] as [ObjectChangeTracker<T[keyof T]>, keyof T][];\n  let attributeTrackers = [] as (keyof T)[];\n\n  for (let k in trackers) {\n    if (trackers[k]) {\n      nestedTrackers.push([trackers[(k as keyof T)], k]);\n    } else {\n      attributeTrackers.push(k);\n    }\n  }\n\n  return (obj: T) => {\n    if (tracked === obj) return false;\n\n    try {\n      // Ensure all nested trackers receive the latest value.\n      let nestedTrackerResult = false;\n      nestedTrackers.forEach(([tracker, k]) => {\n        if (tracker(obj ? obj[k] : undefined as any)) nestedTrackerResult = true;\n      });\n\n      if (nestedTrackerResult) return true;\n\n      if (tracked == null || obj == null) {\n        return true\n      }\n\n      for (let k of attributeTrackers) {\n        if (tracked[k] !== obj[k]) {\n          return true;\n        }\n      }\n\n      return false;\n    } finally {\n      tracked = obj;\n    }\n  }\n}\n\nfunction propertyTrackersFor<T>(t: T): PropertyTrackers<T> {\n  let result: PropertyTrackers<T> = {} as any;\n  for (let k in t) {\n    let v = t[k];\n    if (!Array.isArray(v) && typeof v == \"object\") {\n      let empty = true;\n      for (let _ in v) {\n        if(!!_){\n          empty = false;\n        }\n        break;\n      }\n\n      if (empty) {\n        result[k] = instanceTracker<any>();\n      } else {\n        result[k] = nestedTrackersObjectTracker<any>(propertyTrackersFor(v));\n      }\n    } else {\n      result[k] = null as any;\n    }\n  }\n\n  return result;\n}\n\nfunction memoize<T extends Function>(f: T, tracker: (args: IArguments) => boolean): T {\n  let called = false;\n  let lastValue = undefined as any;\n\n  let func = function () {\n    if (tracker(arguments) || !called) {\n      called = true;\n      return lastValue = f.apply(func, arguments);\n    }\n\n    return lastValue;\n  } as any as T;\n  return func;\n}\n\nexport function memoizeByEachArgument<T extends Function>(t: T): T {\n  return memoize(t, arrayContentsTracker<any>());\n}\n\nexport function memoizeByAllProperties<T extends Function>(t: T): T {\n  const objectTracker = objectContentsTracker();\n  return memoize(t, args => objectTracker(args[0]));\n}\n\nexport function memoizeBySomeProperties<A, R>(a: A, f: (a: A) => R): (a: A) => R {\n  const objectTracker = nestedTrackersObjectTracker(propertyTrackersFor(a));\n  return memoize(f, args => objectTracker(args[0]));\n}\n\n","import {memoizeBySomeProperties} from \"../utils/memoizers\";\nimport {initialState} from \"../state\";\nimport {calculateMML} from \"../utils/mml-utils\";\n\nexport const chordIdentifier = (chord: ChordType | void): string => {\n  if(!chord) return \"\";\n  return `k${chord.baseKey}c${chord.chordRuleIndex}v${chord.variation}p${chord.pitchClass}m${calculateMML(chord)}`\n};\n\nexport type KeyLetter = 'A' | 'A#' | 'B' | 'C' | 'C#' | 'D' | 'D#' | 'E' | 'F' | 'F#' | 'G' | 'G#'\nexport const KEYS: KeyLetter[] = ['A', 'A#', 'B', 'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#'];\n\nexport interface ChordType extends ChordRuleType {\n  baseKey: string,\n  variation: number,\n  chordRuleIndex: number,\n  octave: number,\n  notes: number[],\n}\n\nexport interface ChordRuleType {\n  name: string,\n  symbol: string,\n  pitchClass: number[],\n  quality: string,\n}\n\nexport const recomputeChordGrid = memoizeBySomeProperties({\n  chordRules: initialState.chordRules,\n  selectedKeyIndex: initialState.selectedKeyIndex,\n  synth: initialState.synth,\n}, (state): ChordType[] => {\n\n  if (state.selectedKeyIndex === undefined) return [];\n  let selectedKeyIndex: number = state.selectedKeyIndex;\n  let baseKey = KEYS[selectedKeyIndex];\n  let chordGrid: ChordType[] = [];\n\n  state.chordRules.map((chordRule, chordRuleIndex) => {\n    let chordNotes = chordRule.pitchClass.slice();\n    let variation = 0;\n\n    for (let p = 0; p < chordNotes.length; p++) {\n      chordNotes[p] += selectedKeyIndex + state.synth.base_octave * KEYS.length;\n\n      while (p > 0 && chordNotes[p] < chordNotes[p - 1]) {\n        chordNotes[p] += KEYS.length;\n      }\n    }\n\n    let baseChord: ChordType = {\n      ...chordRule,\n      notes: chordNotes.slice(),\n      variation: variation,\n      baseKey: baseKey,\n      chordRuleIndex: chordRuleIndex,\n      octave: state.synth.base_octave,\n    };\n\n    chordGrid.push(baseChord);\n\n\n    let baseChordNotes = baseChord.notes.slice();\n\n    for (variation = 1; variation < baseChordNotes.length; variation++) {\n      let firstPitch = baseChordNotes[0];\n\n      while (firstPitch < baseChordNotes[baseChordNotes.length - 1]) {\n        firstPitch += KEYS.length;\n      }\n\n      baseChordNotes = baseChordNotes.slice(1).concat(firstPitch);\n\n      if (baseChordNotes[0] >= state.synth.base_octave * KEYS.length + KEYS.length) {\n        baseChordNotes = baseChordNotes.map(note => note - KEYS.length);\n      }\n\n      let chordVariation: ChordType = {\n        ...baseChord,\n        notes: baseChordNotes.slice(),\n        variation: variation,\n      };\n\n      chordGrid.push(chordVariation);\n    }\n\n    return baseChord;\n  });\n\n\n  return chordGrid\n});\n","import {ChordRuleType, ChordType, KeyLetter, KEYS} from \"../reducers/recompute-chord-grid\";\n\nexport const calculateMML = (chord: ChordType | null | void): string => {\n  if(!chord) return \"\";\n  let mml = \"o\" + chord.octave + \"[\";\n  for (let p = 0; p < chord.notes.length; p++) {\n    let pitch = chord.notes[p];\n    if (p > 0 && chord.notes[p] < chord.notes[p - 1]) {\n      mml += \"<\";\n    }\n\n    let key: string = KEYS[pitch % KEYS.length];\n\n    if (key !== chord.baseKey) {\n      key = key.toLowerCase();\n    }\n\n    mml += key;\n  }\n\n  mml += ']';\n\n  return mml;\n};\n\nexport const parseMMLChords = (chordRules: ChordRuleType[], mmlChords: string[]): ChordType[] => {\n  let result: ChordType[] = [];\n  mmlChords.map(mmlChord => {\n\n    let octave = 0;\n    let chordNotes: number[] = [];\n    let pitchClass: number[] = [];\n    let readingChord = false;\n\n    let chordNoteKeys = mmlChord.match(/[abcdefgABCDEFG]#?/g);\n    if (!chordNoteKeys) return null;\n\n    let upperCaseKeys = mmlChord.match(/[ABCDEFG]#?/g);\n    if (!upperCaseKeys) return null;\n\n    let baseKey: KeyLetter = upperCaseKeys[0] as KeyLetter;\n    let variation = (chordNoteKeys.length - chordNoteKeys.indexOf(baseKey) ) % chordNoteKeys.length;\n\n    for (let m = 0; m < mmlChord.length; m++) {\n      let mmlItem = mmlChord[m];\n\n      if (mmlItem === \"o\" && parseInt(mmlChord[m + 1])) {\n        octave = parseInt(mmlChord[++m]);\n      } else if (mmlItem === \"[\") {\n        readingChord = true;\n      } else if (mmlItem === \"]\") {\n        readingChord = false;\n      } else if (mmlItem.match(/[abcdefgABCDEFG]/g)) {\n\n        let key = mmlItem;\n        if (mmlChord[m + 1] === \"#\") {\n          key += mmlChord[++m];\n        }\n\n        if (readingChord) {\n\n          let chordNote = KEYS.indexOf(key.toUpperCase() as KeyLetter);\n\n          let basePitch = (chordNote - KEYS.indexOf(baseKey) + KEYS.length) % KEYS.length;\n\n          pitchClass.push(basePitch);\n\n          chordNote += octave * KEYS.length;\n\n          while (chordNotes.length > 0 && chordNote < chordNotes.slice(-1)[0]){\n            chordNote += KEYS.length;\n          }\n\n          chordNotes.push(chordNote);\n\n        }\n\n      }\n    }\n\n\n    let chordRuleIndex;\n    pitchClass = pitchClass.slice(pitchClass.indexOf(0)).concat(pitchClass.slice(0, pitchClass.indexOf(0)));\n\n    for (chordRuleIndex = 0 ; chordRuleIndex < chordRules.length; chordRuleIndex++){\n      if (JSON.stringify(chordRules[chordRuleIndex].pitchClass) === JSON.stringify(pitchClass)) {\n        break;\n      }\n    }\n\n    let chord = {\n      ...chordRules[chordRuleIndex],\n      octave: octave,\n      notes: chordNotes,\n      variation: variation,\n      baseKey: baseKey,\n      chordRuleIndex: chordRuleIndex,\n    };\n\n    result.push(chord);\n    return chord;\n  });\n\n  return result;\n};","import { Effect, Services } from \"./services\";\nimport { Action } from \"../root-reducer\";\nimport {SynthResource} from \"../../resources/synth-resource\";\nimport {changeSynthAttribute} from \"../../reducers/synth-tools-reducer\";\n\nexport type FollowKnobMovementsEffect = {\n  effectType: 'follow-knob-movements'\n  knobKey: keyof SynthResource\n}\nexport const followKnobMovementsEffect = (knobKey: keyof SynthResource): FollowKnobMovementsEffect => {\n  return {\n    effectType: 'follow-knob-movements',\n    knobKey\n  }\n};\n\n\nexport type MouseEffects =\n  | FollowKnobMovementsEffect;\n\nexport function withMouseMovements(dispatch: (action: Action) => void): Services {\n\n  let mouseMoveEventListener: (e: MouseEvent) => void;\n  let mouseUpEventListener: () => void;\n\n  const removeEvents = () => {\n    document.body.removeEventListener('mousemove', mouseMoveEventListener);\n    document.body.removeEventListener('mouseup', mouseUpEventListener);\n  };\n\n  const addEvents = () => {\n    document.body.addEventListener('mousemove', mouseMoveEventListener);\n    document.body.addEventListener('mouseup', mouseUpEventListener);\n  };\n\n  const handleMouseMovement = (e: MouseEvent, knobKey: keyof SynthResource) => {\n    e.preventDefault();\n    e.stopPropagation();\n    e.stopImmediatePropagation();\n     dispatch(changeSynthAttribute(knobKey, e.movementY))\n  };\n\n  const handleMouseUp = () => {\n    removeEvents();\n  };\n\n\n  return (effect: Effect) => {\n    switch(effect.effectType){\n      case \"follow-knob-movements\":\n        removeEvents();\n        mouseMoveEventListener = (e: MouseEvent) => handleMouseMovement(e, effect.knobKey);\n        mouseUpEventListener = handleMouseUp;\n        addEvents();\n        break;\n    }\n  }\n}\n","import {State} from \"../state\";\nimport {ReductionWithEffect} from \"../core/reducers\";\nimport {Action} from \"../core/root-reducer\";\nimport {requestAjax} from \"../core/services/ajax-service\";\nimport {ApiV1SynthPath} from \"../resources/routes\";\nimport {Effect} from \"../core/services/services\";\nimport {getLoggedInUserRequestName} from \"./footer-reducer\";\nimport {userSignInRequestName} from \"./login-reducer\";\nimport {SynthResource} from \"../resources/synth-resource\";\nimport {followKnobMovementsEffect} from \"../core/services/mouse-movements-service\";\n\nconst ChangeOctaveActionType = \"change-octave\";\nexport type ChangeOctaveAction = {\n  type: typeof ChangeOctaveActionType\n  change: OctaveChanges\n}\n\nexport const changeOctave = (change: OctaveChanges): ChangeOctaveAction => {\n  return {\n    type: ChangeOctaveActionType,\n    change\n  };\n};\n\nexport type OctaveChanges = 'increase' | 'decrease'\n\nexport const MAXIMUM_OCTAVE = 4;\nexport const MINIMUM_OCTAVE = 0;\n\nconst ChangeBaseFrequencyActionType = \"change-base-frequency\";\nexport type ChangeBaseFrequencyAction = {\n  type: typeof ChangeBaseFrequencyActionType\n  frequency: number\n}\n\nexport const changeBaseFrequency = (frequency: number): ChangeBaseFrequencyAction => {\n  return {\n    type: ChangeBaseFrequencyActionType,\n    frequency\n  };\n};\n\nconst SelectWaveTypeActionType = \"select-wave-type\";\nexport type SelectWaveTypeAction = {\n  type: typeof SelectWaveTypeActionType\n  waveType: OscillatorType\n}\n\nexport const selectWaveType = (waveType: OscillatorType): SelectWaveTypeAction => {\n  return {\n    type: SelectWaveTypeActionType,\n    waveType\n  };\n};\n\nconst ToggleSoundActionType = \"toggle-sound\";\nexport type ToggleSoundAction = {\n  type: typeof ToggleSoundActionType\n}\n\nexport const toggleSound = (): ToggleSoundAction => {\n  return {\n    type: ToggleSoundActionType\n  };\n};\n\nconst SaveSynthToolsActionType = \"save-synth-tools\";\nexport type SaveSynthToolsAction = {\n  type: typeof SaveSynthToolsActionType\n}\n\nexport const saveSynthTools = (): SaveSynthToolsAction => {\n  return {\n    type: SaveSynthToolsActionType\n  };\n};\n\nexport type ActivateKnobAction = {\n  type: \"activate-knob\"\n  knobKey: keyof SynthResource\n}\n\nexport const activateKnob = (knobKey: keyof SynthResource): ActivateKnobAction => {\n  return {\n    type: \"activate-knob\",\n    knobKey\n  };\n};\n\nexport type ChangeKnobValueAction = {\n  type: \"change-knob-value\"\n  synthKey: keyof SynthResource,\n  changeValue: number\n}\n\nexport const changeSynthAttribute = (synthKey: keyof SynthResource, changeValue: number): ChangeKnobValueAction => {\n  return {\n    type: \"change-knob-value\",\n    synthKey,\n    changeValue\n  };\n};\n\nexport type ChordToolsActions =\n  ChangeOctaveAction\n  | ChangeBaseFrequencyAction\n  | SelectWaveTypeAction\n  | ToggleSoundAction\n  | SaveSynthToolsAction\n  | ActivateKnobAction\n  | ChangeKnobValueAction;\n\nexport const reduceChordTools = (state: State, action: Action): ReductionWithEffect<State> => {\n  let effects: Effect[] = [];\n\n  switch (action.type) {\n\n    case \"complete-request\":\n      let response = JSON.parse(action.response);\n      if (action.name[0] === updateSynthToolsRequestName) {\n        if(action.success){\n          let synth = response.data;\n          state = {...state};\n          state.synth = {...state.synth, ...synth};\n\n          if(!state.loggedInUser) break;\n          state.loggedInUser = {...state.loggedInUser};\n          state.loggedInUser.latest_synth = {...state.loggedInUser.latest_synth, ...synth};\n        }\n\n      }\n      else if (action.name[0] === getLoggedInUserRequestName || action.name[0] === userSignInRequestName){\n        if(action.success){\n          let synth = response.data.latest_synth;\n          if(synth){\n            state = {...state};\n            state.synth = {...state.synth, ...synth};\n          }\n        }\n      }\n      break;\n\n    case \"change-octave\": {\n\n      state = {...state};\n      state.synth = {...state.synth};\n      switch (action.change) {\n        case \"decrease\":\n          state.synth.base_octave--;\n          if (state.synth.base_octave < MINIMUM_OCTAVE) {\n            state.synth.base_octave = MINIMUM_OCTAVE;\n          }\n\n          break;\n        case 'increase':\n          state.synth.base_octave++;\n          if (state.synth.base_octave > MAXIMUM_OCTAVE) {\n            state.synth.base_octave = MAXIMUM_OCTAVE;\n          }\n          break;\n      }\n\n      break;\n    }\n\n    case \"change-base-frequency\": {\n      state = {...state};\n      state.synth = {...state.synth};\n      state.synth.base_frequency = action.frequency;\n      break;\n    }\n\n    case \"select-wave-type\": {\n      state = {...state};\n      state.synth = {...state.synth};\n      state.synth.vco_signal = action.waveType;\n      break;\n    }\n\n    case \"toggle-sound\": {\n      state = {...state};\n      state.synth = {...state.synth};\n      state.synth.sound_on = !state.synth.sound_on;\n      break;\n    }\n\n    case \"change-knob-value\": {\n      state = {...state};\n      state.synth = {...state.synth};\n\n      if(action.synthKey === \"cut_off_frequency\" || action.synthKey === \"attack\" || action.synthKey === \"release\"){\n        let newValue = 0;\n\n        if(action.synthKey === \"cut_off_frequency\") {\n          newValue = state.synth[action.synthKey] - action.changeValue * 10;\n        } else if(action.synthKey === \"attack\"){\n          newValue = parseFloat(state.synth[action.synthKey] + \"\") - action.changeValue * 0.01;\n        } else if(action.synthKey === \"release\"){\n          newValue = parseFloat(state.synth[action.synthKey] + \"\") - action.changeValue * 0.1;\n        }\n\n        if(newValue > state.limits[action.synthKey].min && newValue < state.limits[action.synthKey].max){\n          state.synth[action.synthKey] = newValue;\n        }\n      }\n      break;\n    }\n\n    case \"activate-knob\":\n      effects = effects.concat(followKnobMovementsEffect(action.knobKey));\n      break;\n\n    case \"save-synth-tools\":\n      const url = ApiV1SynthPath + (state.synth.id ? \"/\" + state.synth.id : \"\");\n      const method = state.synth.id ? \"PUT\" : \"POST\";\n      const {id, ...synth} = {...state.synth};\n      synth.user_id = state.loggedInUser && state.loggedInUser.id;\n\n      effects = effects.concat(requestAjax([updateSynthToolsRequestName], {\n        url: url,\n        method: method,\n        headers: state.headers,\n        json: {\n          synth: {...synth}\n        }\n      }));\n      break;\n  }\n\n  return {state, effects};\n};\n\nexport const updateSynthToolsRequestName = \"update-synth-tools\";","import {SynthResource} from \"../resources/synth-resource\";\n\nexport const playSound = (noteIndex: number,notes: number[], audioContext: AudioContext, synth: SynthResource) => {\n  if (!synth.sound_on) return null;\n  if (noteIndex < 0 || noteIndex >= notes.length) {\n    return null;\n  }\n\n  let noteFrequency = notes[noteIndex];\n\n  let osc1 = audioContext.createOscillator();\n  let biquadFilter = audioContext.createBiquadFilter();\n  let gain = audioContext.createGain();\n\n  osc1.connect(biquadFilter);\n  biquadFilter.connect(gain);\n  gain.connect(audioContext.destination);\n\n  osc1.type = synth.vco_signal;\n  osc1.frequency.value = noteFrequency;\n  biquadFilter.type = \"lowpass\";\n  biquadFilter.frequency.value = synth.cut_off_frequency;\n\n  const now = audioContext.currentTime;\n  const endTime = now + parseFloat(synth.release + \"\");\n  const attackTime = now + parseFloat(synth.attack + \"\");\n  gain.gain.setValueAtTime(0, now);\n  gain.gain.linearRampToValueAtTime(0.2, attackTime);\n  gain.gain.exponentialRampToValueAtTime(0.000001, endTime);\n  osc1.start(now);\n  osc1.stop(endTime);\n  return osc1;\n};","import { Effect, Services } from \"./services\";\nimport { Action } from \"../root-reducer\";\nimport { playSound } from \"../../utils/sound-utils\";\nimport { SynthResource } from \"../../resources/synth-resource\";\nimport { OutputSource } from \"./midi-service\";\n\nexport interface PlaySoundEffect {\n  effectType: \"play-sound\",\n  noteIndex: number,\n  notes: number[],\n  audioContext: AudioContext,\n  synth: SynthResource\n  outputSource: OutputSource\n}\n\nexport const playSoundEffect = (noteIndex: number, notes: number[], audioContext: AudioContext, synth: SynthResource, outputSource: OutputSource): PlaySoundEffect => {\n  return {\n    effectType: \"play-sound\",\n    noteIndex,\n    notes,\n    audioContext,\n    synth,\n    outputSource\n  }\n};\n\nexport function withSound(dispatch: (action: Action) => void): Services {\n  return (effect: Effect) => {\n    switch (effect.effectType) {\n      case \"play-sound\":\n\n        playSound(effect.noteIndex, effect.notes, effect.audioContext, effect.synth);\n        if (effect.outputSource === \"computer\") {\n          playSound(effect.noteIndex, effect.notes, effect.audioContext, effect.synth);\n        }\n\n        break;\n    }\n  }\n}\n","import { Effect, Services } from \"./services\";\nimport { Action } from \"../root-reducer\";\nimport {KeyBoardMapType, toggleKeyboardKey, KeyBoardPressType} from \"../../reducers/keyboard-reducer\";\nimport {selectSavedChord} from \"../../reducers/footer-reducer\";\n\nexport const USKeyboardMapperFirstRow =\n  ['q', '2', 'w', 'e', '4', 'r', '5', 't', 'y', '7', 'u', '8', 'i', '9', 'o', 'p', '-', '[', '=', ']', '\\\\'];\nexport const USKeyboardMapperSecondRow = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n  'z', 's', 'x', 'd', 'c', 'f', 'v', 'b', 'h', 'n', 'j', 'm', ',', 'l', '.', ';', '/'];\n\nconst KeyboardMapperFirstRow =\n  ['KeyQ', 'Digit2', 'KeyW', 'KeyE', 'Digit4', 'KeyR', 'Digit5', 'KeyT', 'KeyY', 'Digit7', 'KeyU', 'Digit8', 'KeyI', 'Digit9', 'KeyO', 'KeyP', 'Minus', 'BracketLeft', 'Equal', 'BracketRight', 'Backslash'];\nconst KeyboardMapperSecondRow = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n  'KeyZ', 'KeyS', 'KeyX', 'KeyD', 'KeyC', 'KeyF', 'KeyV', 'KeyB', 'KeyH', 'KeyN', 'KeyJ', 'KeyM', 'Comma', 'KeyL', 'Period', 'Semicolon', 'Slash'];\n\nexport type CancelExternalInputEffect = {\n  effectType: 'cancel-external-input'\n}\nexport const cancelExternalInput = (): CancelExternalInputEffect => {\n  return {\n    effectType: 'cancel-external-input'\n  }\n};\n\nexport type AcceptExternalInputEffect = {\n  effectType: 'accept-external-input'\n  keyboardMap: KeyBoardMapType,\n  keyboardPresser: KeyBoardPressType\n}\nexport const acceptExternalInput = (keyboardMap: KeyBoardMapType, keyboardPresser: KeyBoardPressType): AcceptExternalInputEffect => {\n  return {\n    effectType: 'accept-external-input',\n    keyboardMap,\n    keyboardPresser\n  }\n};\n\nexport type ExternalInputEffects =\n  | CancelExternalInputEffect\n  | AcceptExternalInputEffect;\n\nexport function withExternalInput(dispatch: (action: Action) => void): Services {\n\n  let pressedKeyCodes: {[k: string]: boolean} = {};\n\n  let keydownEventListener: (e: KeyboardEvent) => void;\n  let keyupEventListener: (e: KeyboardEvent) => void;\n\n  const getKeyIndex = (e: KeyboardEvent) => {\n    let keyIndex = KeyboardMapperFirstRow.indexOf(e.code);\n\n    if (keyIndex === -1) {\n      keyIndex = KeyboardMapperSecondRow.indexOf(e.code);\n    }\n\n    return keyIndex;\n  }\n\n  const handleKeyDown = (e: KeyboardEvent, keyboardMap: KeyBoardMapType) => {\n\n    if(pressedKeyCodes[e.code]) return;\n\n    pressedKeyCodes[e.code] = true;\n\n    const keyIndex = getKeyIndex(e);\n\n    if (keyIndex !== -1) {\n      if(keyboardMap === \"keys\"){\n        dispatch(toggleKeyboardKey(keyIndex));\n      }\n      else if(keyboardMap === \"chords\") {\n        dispatch(selectSavedChord(keyIndex))\n      }\n    }\n  };\n\n  const handleKeyUp = (e: KeyboardEvent, keyboardMap: KeyBoardMapType, keyboardPresser: KeyBoardPressType) => {\n    pressedKeyCodes[e.code] = false;\n\n    if(keyboardPresser === 'live'){\n      const keyIndex = getKeyIndex(e);\n\n      if (keyIndex !== -1){\n        dispatch(toggleKeyboardKey(keyIndex, false))\n      }\n    }\n  };\n\n\n  return (effect: Effect) => {\n    switch(effect.effectType){\n      case \"cancel-external-input\":\n        document.body.removeEventListener('keydown', keydownEventListener);\n        document.body.removeEventListener('keyup', keyupEventListener);\n        break;\n\n      case \"accept-external-input\":\n        document.body.removeEventListener('keydown', keydownEventListener);\n        document.body.removeEventListener('keyup', keyupEventListener);\n        keydownEventListener = (e: KeyboardEvent) => handleKeyDown(e, effect.keyboardMap);\n        keyupEventListener = (e: KeyboardEvent) => handleKeyUp(e, effect.keyboardMap, effect.keyboardPresser);\n        document.body.addEventListener('keydown', keydownEventListener);\n        document.body.addEventListener('keyup', keyupEventListener);\n        break;\n    }\n  }\n}\n","import {Effect, Services} from \"./services\";\nimport {Action} from \"../root-reducer\";\nimport {ChordMapperKeys, KeyBoardMapType, toggleKeyboardKey, KeyBoardPressType} from \"../../reducers/keyboard-reducer\";\nimport {selectSavedChord} from \"../../reducers/footer-reducer\";\n\nexport const MIDI_NOTE_DELTA = 21;\n\nexport type OutputSource = \"computer\" | \"midi\";\n\nexport type StopMidiNoteAction = {\n  type: \"stop-midi-note\"\n  midiNote: number;\n}\nexport const stopMidiNoteAction = (midiNote: number): StopMidiNoteAction => {\n  return {\n    type: \"stop-midi-note\",\n    midiNote,\n  }\n};\n\nexport const parseMidiNote = (midiNote: number) => {\n  const pianoNote = midiNote - MIDI_NOTE_DELTA;\n  const keyIndex = pianoNote % (ChordMapperKeys.length - 1);\n\n  return {pianoNote, keyIndex}\n};\n\nexport type MidiActions = StopMidiNoteAction;\n\nexport type StopMidiNoteEffect = {\n  effectType: \"stop-midi-note\"\n  midiNote: number\n}\n\nexport const stopMidiNoteEffect = (midiNote: number): StopMidiNoteEffect => {\n  return {\n    effectType: \"stop-midi-note\",\n    midiNote\n  }\n};\n\nexport type MidiEffects = StopMidiNoteEffect;\n\n\nexport function withMidiInput(dispatch: (action: Action) => void): Services {\n  let midi: WebMidi.MIDIAccess | null = null;\n  let midiInputs: WebMidi.MIDIInput[] = [];\n  let midiOutputs: WebMidi.MIDIOutput[] = [];\n\n  const on = 0x90;\n  const off = 0x80;\n  const velocity = 0x7f;\n\n  const clearMidiEvents = () => {\n    midiInputs.map(input => {\n      return input.onmidimessage = () => null;\n    });\n    midi = null;\n    midiInputs = [];\n    midiOutputs = [];\n  };\n\n  const onMIDISuccess = (keyboardMap: KeyBoardMapType, keyboardPresser: KeyBoardPressType) => (m: WebMidi.MIDIAccess) => {\n    clearMidiEvents();\n\n    midi = m;\n\n    let it = midi.inputs.values();\n    for (let i = it.next(); !i.done; i = it.next()) {\n      midiInputs.push(i.value);\n    }\n\n    let ot = midi.outputs.values();\n    for (let o = ot.next(); !o.done; o = ot.next()) {\n      midiOutputs.push(o.value);\n    }\n\n    for (let i = 0; i < midiInputs.length; i++) {\n      midiInputs[i].onmidimessage = onMIDIEvent(keyboardMap, keyboardPresser);\n    }\n  };\n\n  function onMIDIFailure(msg: string) {\n    console.log(\"onMIDIFailure()呼ばれただと？:\" + msg);\n  }\n\n  const onMIDIEvent = (keyboardMap: KeyBoardMapType, keyboardPresser: KeyBoardPressType) => (e: WebMidi.MIDIMessageEvent) => {\n    const command = e.data[0];\n    const midiNote = e.data[1];\n    const vel = e.data[2];\n    const {keyIndex} = parseMidiNote(midiNote);\n\n    if (vel !== 0 && command === on) {\n      if (keyboardMap === \"keys\") {\n        dispatch(toggleKeyboardKey(keyIndex));\n      } else if (keyboardMap === \"chords\") {\n        dispatch(selectSavedChord(keyIndex));\n        dispatch(stopMidiNoteAction(midiNote));\n      }\n    } else if(keyboardPresser === 'live'){\n      dispatch(toggleKeyboardKey(keyIndex, false));\n    }\n  };\n\n  return (effect: Effect) => {\n    switch (effect.effectType) {\n      case \"cancel-external-input\":\n        clearMidiEvents();\n        break;\n\n      case \"accept-external-input\":\n        if(navigator.requestMIDIAccess){\n          navigator.requestMIDIAccess().then(onMIDISuccess(effect.keyboardMap, effect.keyboardPresser), onMIDIFailure);\n        } else {\n          console.error('No Midi Access is supported on this device');\n        }\n        break;\n\n      case \"play-sound\":\n        if (effect.outputSource === \"midi\") {\n          if (midiOutputs.length > 0) {\n            const note = effect.noteIndex + MIDI_NOTE_DELTA;\n\n            midiOutputs[0].send([on, note, velocity]);\n\n            const now = effect.audioContext.currentTime;\n            const endTime = now + parseFloat(effect.synth.release + \"\");\n\n            setTimeout(() => midiOutputs[0].send([off, note, velocity]), endTime)\n          }\n        }\n        break;\n\n      case \"stop-midi-note\":\n        midiOutputs[0].send([off, effect.midiNote, velocity]);\n        break;\n    }\n  }\n}\n","import { State } from \"../state\";\nimport { ReductionWithEffect } from \"../core/reducers\";\nimport { Action } from \"../core/root-reducer\";\nimport { ChordType, KEYS } from \"./recompute-chord-grid\";\nimport { MAXIMUM_OCTAVE, MINIMUM_OCTAVE } from \"./synth-tools-reducer\";\nimport { Effect } from \"../core/services/services\";\nimport { playSoundEffect } from \"../core/services/sound-service\";\nimport {acceptExternalInput, cancelExternalInput} from \"../core/services/external-input-service\";\nimport {parseMidiNote, stopMidiNoteEffect} from \"../core/services/midi-service\";\n\nexport const ChordMapperKeys = KEYS.concat(KEYS).concat(KEYS).concat(KEYS[0]);\n\nexport type ToggleChordMapperKeyAction = {\n  type: \"toggle-chord-mapper-key\"\n  keyIndex: number\n  on: boolean | void\n}\n\nexport const toggleKeyboardKey = (keyIndex: number, on: boolean | void): ToggleChordMapperKeyAction => {\n  return {\n    type: \"toggle-chord-mapper-key\",\n    keyIndex,\n    on\n  };\n};\n\nexport type SelectChordAction = {\n  type: \"select-chord\"\n  chord: ChordType\n}\n\nexport const selectChordAction = (chord: ChordType): SelectChordAction => {\n  return {\n    type: \"select-chord\",\n    chord\n  };\n};\n\nexport type KeyBoardMapType = 'keys' | 'chords' | 'none';\n\nexport type ChangeKeyboardMapAction = {\n  type: \"change-keyboard-map\"\n  keyboardMap: KeyBoardMapType\n}\n\nexport const changeKeyboardMap = (keyboardMap: KeyBoardMapType): ChangeKeyboardMapAction => {\n  return {\n    type: \"change-keyboard-map\",\n    keyboardMap\n  };\n};\n\nexport type KeyBoardPressType = 'hold' | 'live';\n\nexport type ChangeKeyboardPresserAction = {\n  type: \"change-keyboard-presser\"\n  keyboardPresser: KeyBoardPressType\n}\n\nexport const changeKeyboardPresser = (keyboardPresser: KeyBoardPressType): ChangeKeyboardPresserAction => {\n  return {\n    type: \"change-keyboard-presser\",\n    keyboardPresser\n  }\n}\n\nexport type ClearKeyboardAction = {\n  type: 'clear-keyboard'\n}\n\nexport const clearKeyboard = (): ClearKeyboardAction => {\n  return {\n    type: 'clear-keyboard'\n  }\n}\n\nexport type ChordMapperActions =\n  | ToggleChordMapperKeyAction\n  | SelectChordAction\n  | ChangeKeyboardMapAction\n  | ChangeKeyboardPresserAction\n  | ClearKeyboardAction\n  ;\n\nexport const mapChordToKeys = (state: State): State => {\n  if (state.selectedGridChord) {\n\n    let tmpChordNotes = state.selectedGridChord.notes.slice();\n    let chordNotes = tmpChordNotes.slice();\n    for (let i = 0; i < chordNotes.length; i++) {\n      let pitch = chordNotes[i];\n      let newPitch = (pitch - state.synth.base_octave * KEYS.length) % (ChordMapperKeys.length);\n\n      tmpChordNotes[i] = newPitch;\n      if (tmpChordNotes[0] < 0) {\n        newPitch += KEYS.length;\n      }\n      chordNotes[i] = newPitch;\n    }\n    state.chordMapperKeys = ChordMapperKeys.map((key, i) => {\n      return chordNotes.includes(i);\n    });\n  }\n\n  return state;\n};\n\nexport const scalePitchClass = (pitchClass: number[]): number[] => {\n  let scaledPitchClass = pitchClass.slice();\n  for (let p = 1; p < scaledPitchClass.length; p++) {\n    while (scaledPitchClass[p - 1] >= scaledPitchClass[p]) {\n      scaledPitchClass[p] += KEYS.length;\n    }\n  }\n  return scaledPitchClass;\n};\n\nexport const nextVariation = (pitchClass: number[]): number[] => {\n  return scalePitchClass(pitchClass.slice(1).concat(pitchClass[0]));\n};\n\nexport const chordMapperKeysToKeys = (chordMapperKeys: boolean[]): number[] => {\n  return chordMapperKeys.map((on, mapKeyIndex) => {\n    return on ? (mapKeyIndex) % KEYS.length : -1;\n  }).filter(k => k >= 0)\n};\n\nexport const keysToPitchClass = (keyIndexes: number[]): number[] => {\n  return keyIndexes.map(keyIndex => keyIndex - keyIndexes[0]);\n};\n\nexport const mapKeysToChord = (state: State): State => {\n  state = { ...state };\n  state.suggestedGridChords = [];\n  state.suggestedKeyIndexes = [];\n\n  let keyIndexes = chordMapperKeysToKeys(state.chordMapperKeys);\n  let pitchClass = keysToPitchClass(scalePitchClass((keyIndexes)));\n\n  for (let chordRuleIndex = 0; chordRuleIndex < state.chordRules.length; chordRuleIndex++) {\n\n    let chord = state.chordRules[chordRuleIndex];\n\n    if (pitchClass.length !== chord.pitchClass.length) continue;\n\n    let chordPitchClass = chord.pitchClass;\n    chordPitchClass = scalePitchClass(chordPitchClass);\n\n    for (let variation = 0; variation < chordPitchClass.length; variation++) {\n      if (variation > 0) chordPitchClass = keysToPitchClass(nextVariation(chordPitchClass));\n\n      if (JSON.stringify(pitchClass) !== JSON.stringify(chordPitchClass)) continue;\n\n      let baseKeyIndex = keyIndexes[(keyIndexes.length - variation) % keyIndexes.length];\n      let baseKey = KEYS[baseKeyIndex];\n      state.suggestedKeyIndexes.push(baseKeyIndex);\n\n      state.suggestedGridChords = state.suggestedGridChords.slice();\n      for (let octave = MINIMUM_OCTAVE; octave <= MAXIMUM_OCTAVE; octave++) {\n        let chordNotes = scalePitchClass(pitchClass.map(pitch => pitch + keyIndexes[0] + octave * KEYS.length));\n        state.suggestedGridChords.push({\n          ...chord,\n          notes: chordNotes,\n          baseKey: baseKey, variation: variation, chordRuleIndex: chordRuleIndex, octave: octave\n        });\n      }\n\n    }\n  }\n\n  return state;\n};\n\n\nexport const reduceChordMapper = (state: State, action: Action): ReductionWithEffect<State> => {\n  let effects: Effect[] = [];\n  switch (action.type) {\n    case \"toggle-chord-mapper-key\": {\n      state = { ...state };\n      state.chordMapperKeys = state.chordMapperKeys.slice();\n      state.chordMapperKeys[action.keyIndex] = action.on === undefined || action.on === null ? !state.chordMapperKeys[action.keyIndex] : action.on;\n\n      state = mapKeysToChord(state);\n\n      if(state.chordMapperKeys[action.keyIndex]){\n        let noteIndex = action.keyIndex + (state.synth.base_octave * KEYS.length);\n        effects = effects.concat(playSoundEffect(noteIndex, state.notes, state.audioContext, state.synth, state.inputs.outputSource));\n      }\n      break;\n    }\n\n    case \"select-chord\": {\n      ({state, effects} = selectChord(state, effects, action.chord));\n\n      break;\n    }\n\n    case \"change-keyboard-map\": {\n      state = {...state};\n      state.keyboardMapPriorToInput = state.inputs.mapKeyboardTo;\n      state.inputs = {...state.inputs};\n      state.inputs.mapKeyboardTo = action.keyboardMap;\n\n      if(action.keyboardMap === \"none\"){\n        effects = effects.concat(cancelExternalInput());\n      } else {\n        effects = effects.concat(acceptExternalInput(action.keyboardMap, state.inputs.keyboardPresser));\n      }\n      break;\n    }\n\n    case \"change-keyboard-presser\": {\n      state = {...state};\n      state.inputs = {...state.inputs};\n      state.inputs.keyboardPresser = action.keyboardPresser;\n\n      effects = effects.concat(acceptExternalInput(state.inputs.mapKeyboardTo, action.keyboardPresser));\n      break;\n    }\n\n    case \"stop-midi-note\":{\n      const {pianoNote, keyIndex} = parseMidiNote(action.midiNote);\n      const draftChord = state.draftChords[keyIndex];\n      if(draftChord && draftChord.notes.indexOf(pianoNote) === -1){\n        effects = effects.concat(stopMidiNoteEffect(action.midiNote));\n      }\n      break;\n    }\n\n    case 'clear-keyboard':\n      state = {...state};\n      state.chordMapperKeys = state.chordMapperKeys.slice();\n      state.chordMapperKeys = [];\n      break;\n\n  }\n\n  return { state, effects };\n};\n\nexport const selectChord = (state:State,effects: Effect[], chord: ChordType | void) => {\n  state = { ...state };\n  state.selectedGridChord = chord;\n\n  state = mapChordToKeys(state);\n  state = mapKeysToChord(state);\n\n  if(!state.selectedGridChord) return {state,effects};\n\n  effects = effects.concat(state.selectedGridChord.notes.map(noteIndex => {\n    return playSoundEffect(noteIndex, state.notes, state.audioContext, state.synth, state.inputs.outputSource)\n  }));\n\n  return {state, effects}\n};\n","import { State } from \"../state\";\nimport { ReductionWithEffect } from \"../core/reducers\";\nimport { requestAjax } from \"../core/services/ajax-service\";\nimport { ApiV1UsersPath } from \"../resources/routes\";\nimport { calculateMML } from \"../utils/mml-utils\";\nimport { Action } from \"../core/root-reducer\";\nimport { Effect } from \"../core/services/services\";\nimport {chordIdentifier, ChordType} from \"./recompute-chord-grid\";\nimport {selectChord} from \"./keyboard-reducer\";\n\nexport type ToggleDraftChordAction = {\n  type: \"toggle-draft-chord\"\n  chord: ChordType\n}\n\nexport const toggleDraftChord = (chord: ChordType): ToggleDraftChordAction => {\n  return {\n    type: \"toggle-draft-chord\",\n    chord\n  };\n};\n\nexport type ShowStarAction = {\n  type: \"show-star\"\n  chord: ChordType\n  show: boolean\n}\n\nexport const showStar = (chord: ChordType, show: boolean): ShowStarAction => {\n  return {\n    type: \"show-star\",\n    chord,\n    show\n  };\n};\n\n\nexport type SelectSavedChordAction = {\n  type: \"select-saved-chord\"\n  savedChordIndex: number\n}\n\nexport const selectSavedChord = (savedChordIndex: number): SelectSavedChordAction => {\n  return {\n    type: \"select-saved-chord\",\n    savedChordIndex\n  };\n};\n\nexport type FooterActions =\n  | ToggleDraftChordAction\n  | ShowStarAction\n  | SelectSavedChordAction;\n\nexport const reduceFooter = (state: State, action: Action): ReductionWithEffect<State> => {\n  let effects: Effect[] = [];\n\n  switch (action.type) {\n    case \"toggle-draft-chord\": {\n      state = { ...state };\n      state.draftChords = state.draftChords.slice();\n\n      let savedChordIndex = -1;\n      for(let i =0;i < state.draftChords.length; i++){\n        if(chordIdentifier(state.draftChords[i]) === chordIdentifier(action.chord)){\n          savedChordIndex = i;\n          break;\n        }\n      }\n\n      if(savedChordIndex === -1 ){\n        state.draftChords.push(action.chord);\n      } else {\n        state.draftChords.splice(savedChordIndex, 1);\n      }\n\n\n      effects = effects.concat(updateFavoriteChords(state));\n      break;\n    }\n\n    case \"show-star\":\n      state = {...state};\n      state.showStarChord = action.show ? action.chord : undefined;\n      break;\n\n    case \"select-saved-chord\": {\n      ({state, effects} = selectChord(state, effects, state.draftChords[action.savedChordIndex]));\n      break;\n    }\n\n  }\n\n  return { state, effects };\n};\n\nexport const updateFavoriteChords = (state: State): Effect[] => {\n  let effects: Effect[] = [];\n\n  let mmlFavoriteChords = state.draftChords.map(favoriteChord => calculateMML(favoriteChord));\n\n  if (!state.loggedInUser) return [];\n  effects.push(requestAjax([updateFavoriteChordRequestName], {\n    url: `${ApiV1UsersPath}/${state.loggedInUser.id}`, method: \"PUT\", headers: state.headers,\n    json: {\n      user: {\n        favorite_chords: mmlFavoriteChords\n      }\n    }\n  }));\n\n  return effects;\n};\n\nexport const updateFavoriteChordRequestName = \"update-favorite-chords\";\nexport const getLoggedInUserRequestName = \"get-logged-in-user\";","import {historyPush, navigationReducer, PathLocation} from \"../core/services/navigation-service\";\nimport {State} from \"../state\";\nimport {ReductionWithEffect} from \"../core/reducers\";\nimport {Effect} from \"../core/services/services\";\nimport {AuthHeaders, confirmEmailRequestName} from \"./login-reducer\";\nimport {getCookie} from \"../utils/cookies\";\nimport {requestAjax} from \"../core/services/ajax-service\";\nimport {ApiV1UsersPath, AuthConfirmEmail, StripePath} from \"../resources/routes\";\nimport {getLoggedInUserRequestName} from \"./footer-reducer\";\nimport {acceptExternalInput} from \"../core/services/external-input-service\";\n\nexport type PathPart = '' | 'home' | 'sign-up' | 'chords' | 'song'\n\nexport const getStripeData = (state: State, effects: Effect[]): ReductionWithEffect<State> => {\n  if (!state.stripe.publishableKey || state.stripe.plans.length === 0) {\n    effects = effects.concat(requestAjax([getStripePublishableKeyRequestName], {\n      headers: state.headers,\n      url: StripePath + '/data',\n      method: 'GET'\n    }));\n  }\n\n  if (state.loggedInUser ) {\n    state = {...state};\n    state.stripe = {...state.stripe};\n    state.stripe.chosenPlanID = state.loggedInUser ? state.loggedInUser.stripe_subscription.plan.id : state.stripe.chosenPlanID;\n  }\n  return {state, effects};\n};\n\nexport function routerReducer(state: State,\n                              location: PathLocation): ReductionWithEffect<State> {\n  let effects: Effect[] | void = [];\n  state = {...state};\n\n  let nextPathParts: PathPart[] = location.pathname.split(\"/\").slice(1) as PathPart[];\n  if (!nextPathParts[0]) nextPathParts[0] = \"home\";\n\n  effects = effects.concat(acceptExternalInput(state.inputs.mapKeyboardTo, state.inputs.keyboardPresser));\n\n  switch (nextPathParts[0]) {\n\n    case \"sign-up\":\n      if (state.loggedInUser) {\n        nextPathParts = [\"home\"];\n        effects = effects.concat(historyPush({pathname: \"home\"}));\n      }\n\n      ({ state, effects } = getStripeData(state, effects));\n\n      break;\n\n    case \"home\":\n      if (!nextPathParts[1]) nextPathParts[1] = \"chords\";\n\n      if (state.loggedInUser) break;\n\n      state.headers = {...state.headers};\n\n      AuthHeaders.map(header => {\n        let value = getCookie(header);\n        if (!value) return null;\n        state.headers[header] = value;\n        return value;\n      });\n\n      let userId = state.headers[\"id\"];\n      if (userId && Object.keys(state.headers).length === AuthHeaders.length) {\n        effects.push(requestAjax([getLoggedInUserRequestName], {\n          url: `${ApiV1UsersPath}/${userId}`, method: \"GET\", headers: state.headers\n        }));\n        break;\n      }\n\n      let parameters = location.search.split('&');\n\n      parameters = parameters.filter(p => p);\n      if (parameters.length === 0) break;\n\n      parameters[0] = parameters[0].split('?')[1];\n      let confirmationToken = \"\";\n      let email = \"\";\n      let resetPasswordToken = \"\";\n      parameters.map(param => {\n        let [key, value] = param.split('=');\n\n        if (key === \"confirmation_token\" && value) {\n          confirmationToken = value\n        } else if (key === \"email\" && value) {\n          email = value;\n        } else if (key === \"reset_password_token\" && value){\n          resetPasswordToken = value;\n        }\n        return param;\n      });\n\n      if(email) {\n        if (confirmationToken) {\n          effects = effects.concat(requestAjax([confirmEmailRequestName], {\n            url: AuthConfirmEmail,\n            method: \"PUT\",\n            headers: state.headers,\n            json: {\n              user: {\n                confirmation_token: confirmationToken,\n                email: email\n              }\n            }\n          }));\n        } else if(resetPasswordToken) {\n\n          state = {...state};\n          state.toggles = {...state.toggles};\n          state.toggles.isResettingPassword = true;\n          state.inputs = {...state.inputs};\n          state.inputs.email = email;\n          state.inputs.resetPasswordToken = resetPasswordToken;\n\n          state.toggles.showLogInModal = true;\n\n        }\n      }\n\n\n      break;\n\n  }\n\n\n  state.pathParts = nextPathParts;\n\n  return {state, effects};\n}\n\nexport const getStripePublishableKeyRequestName = \"get-stripe-publishable-key\";\n\nexport const reduceNavigation = navigationReducer(routerReducer);\n","import { State } from \"../state\";\nimport { Action } from \"../core/root-reducer\";\nimport { ReductionWithEffect } from \"../core/reducers\";\nimport { Effect } from \"../core/services/services\";\n\nexport type SetStripeObjectAction = {\n  type: \"set-stripe-object\"\n  stripeObject: stripe.Stripe\n}\n\nexport const setStripeObject = (stripeObject: stripe.Stripe): SetStripeObjectAction => {\n  return {\n    type: \"set-stripe-object\",\n    stripeObject\n  };\n};\n\nexport type StripeActions =\n  SetStripeObjectAction;\n\nexport const reduceStripe = (state: State, action: Action): ReductionWithEffect<State> => {\n  let effects: Effect[] = [];\n  switch (action.type) {\n\n    case \"set-stripe-object\": {\n      state = { ...state };\n      state.stripe = { ...state.stripe };\n      state.stripe.object = { ...action.stripeObject };\n\n      break;\n    }\n  }\n\n  return { state, effects };\n};","import { initialState, State, Toggles } from \"../state\";\nimport { ReductionWithEffect } from \"../core/reducers\";\nimport { parseHTTPHeadersToJSON, requestAjax } from \"../core/services/ajax-service\";\nimport {\n  ApiV1UsersPath,\n  AuthResendConfirmationEmail,\n  AuthSignIn,\n  AuthSignUp,\n} from \"../resources/routes\";\nimport { historyPush } from \"../core/services/navigation-service\";\nimport { ResourceType } from \"../resources/resource\";\nimport { UserResource } from \"../resources/user-resource\";\nimport { Action } from \"../core/root-reducer\";\nimport { Effect } from \"../core/services/services\";\nimport { setCookie } from \"../utils/cookies\";\nimport { getLoggedInUserRequestName } from \"./footer-reducer\";\nimport { parseMMLChords } from \"../utils/mml-utils\";\nimport { getStripePublishableKeyRequestName, getStripeData } from \"./router-reducer\";\nimport { StripeResource } from \"../resources/stripe-resource\";\nimport { getStripe } from \"../core/services/stripe-service\";\nimport { setTimer } from \"../core/services/timer-service\";\nimport { toggle } from \"./toggle-reducer\";\n\nexport type SignInAction = {\n  type: \"sign-in\"\n}\n\nexport const signIn = (): SignInAction => {\n  return {\n    type: \"sign-in\"\n  };\n};\n\nexport type SignOutAction = {\n  type: \"sign-out\"\n}\n\nexport const signOut = (): SignOutAction => {\n  return {\n    type: \"sign-out\"\n  };\n};\n\nexport type GoSignUpAction = {\n  type: \"go-sign-up\"\n}\n\nexport const goSignUp = (): GoSignUpAction => {\n  return {\n    type: \"go-sign-up\"\n  };\n};\n\nexport type SignUpAction = {\n  type: \"sign-up\"\n  token_id: string\n}\n\nexport const signUp = (token_id: string): SignUpAction => {\n  return {\n    type: \"sign-up\",\n    token_id\n  };\n};\n\nexport type ErrorOnSignUpAction = {\n  type: \"error-on-sign-up\"\n  error: ResponseError\n}\n\nexport const errorOnSignUp = (error: ResponseError): ErrorOnSignUpAction => {\n  return {\n    type: \"error-on-sign-up\",\n    error\n  };\n};\n\nexport type ChooseStripePlanAction = {\n  type: \"choose-stripe-plan\"\n  stripePlanId: string\n}\n\nexport const chooseStripePlan = (stripePlanId: string): ChooseStripePlanAction => {\n  return {\n    type: \"choose-stripe-plan\",\n    stripePlanId\n  }\n};\n\nexport type GenerateNewAccessTokenAction = {\n  type: \"generate-new-access-token\"\n}\n\nexport const generateNewAccessToken = (): GenerateNewAccessTokenAction => {\n  return {\n    type: \"generate-new-access-token\",\n  }\n};\n\nexport type ResendConfirmationEmailAction = {\n  type: \"resend-confirmation-email\"\n}\n\nexport const resendConfirmationEmail = (): ResendConfirmationEmailAction => {\n  return {\n    type: \"resend-confirmation-email\",\n  }\n};\n\nexport type ChangeEmailAction = {\n  type: \"change-email\"\n}\n\nexport const changeEmail = (): ChangeEmailAction => {\n  return {\n    type: \"change-email\",\n  }\n};\n\nexport type ChangePasswordAction = {\n  type: \"change-password\"\n}\n\nexport const changePassword = (): ChangePasswordAction => {\n  return {\n    type: \"change-password\",\n  }\n};\n\nexport type ForgotPasswordAction = {\n  type: \"forgot-password\"\n}\n\nexport const forgotPassword = (): ForgotPasswordAction => {\n  return {\n    type: \"forgot-password\",\n  }\n};\n\nexport type ResetPasswordAction = {\n  type: \"reset-password\"\n}\n\nexport const resetPassword = (): ResetPasswordAction => {\n  return {\n    type: \"reset-password\",\n  }\n};\n\nexport type CancelSubscriptionAction = {\n  type: \"cancel-subscription\"\n}\n\nexport const cancelSubscription = (): CancelSubscriptionAction => {\n  return {\n    type: \"cancel-subscription\",\n  }\n};\n\nexport type ChangeSubscriptionAction = {\n  type: \"change-subscription\"\n  token_id: string\n}\n\nexport const changeSubscription = (token_id: string): ChangeSubscriptionAction => {\n  return {\n    type: \"change-subscription\",\n    token_id\n  }\n};\n\nexport type LogInActions =\n  | SignInAction\n  | SignOutAction\n  | GoSignUpAction\n  | SignUpAction\n  | ErrorOnSignUpAction\n  | ChooseStripePlanAction\n  | GenerateNewAccessTokenAction\n  | ResendConfirmationEmailAction\n  | ChangeEmailAction\n  | ChangePasswordAction\n  | ForgotPasswordAction\n  | ResetPasswordAction\n  | CancelSubscriptionAction\n  | ChangeSubscriptionAction;\n\n\nexport interface ResponseType {\n  status: string\n  data: ResourceType\n  errors: ResponseError[]\n}\n\nexport type ResponseErrorType = \"sign_in\" | \"confirmation\" | \"email\" | \"password\" | \"confirm_password\" | \"stripe_card\" | \"forgot_password\" | \"reset_password\"\n\nexport type ResponseError = {\n  type: ResponseErrorType\n  message: string\n}\n\nexport const EMAIL_REGEXP = /^[\\w+\\-.]+@[a-z\\d\\-.]+\\.[a-z]+$/;\nexport const AuthHeaders = [\"kordpose-session\", \"id\"];\n\nexport const setUser = (state: State, headers: string, userData: UserResource): State => {\n  state = { ...state };\n  state.loggedInUser = userData;\n  state.headers = parseHTTPHeadersToJSON(headers);\n\n  state.draftChords = parseMMLChords(state.chordRules, state.loggedInUser.favorite_chords);\n\n  for (let key in state.headers) {\n    if (AuthHeaders.indexOf(key) !== -1) {\n      setCookie(key, state.headers[key]);\n    } else {\n      delete state.headers[key];\n    }\n  }\n\n  return state;\n};\n\nexport const resetUser = (state: State): State => {\n  state = { ...state };\n  state.loggedInUser = undefined;\n\n  state.draftChords = [];\n\n  state.headers = { ...state.headers };\n\n  for (let key in state.headers) {\n    state.headers[key] = \"\";\n    if (AuthHeaders.indexOf(key) !== -1) {\n      setCookie(key, state.headers[key]);\n    } else {\n      delete state.headers[key];\n    }\n  }\n\n  return state;\n};\n\nexport const reduceLogin = (state: State, action: Action): ReductionWithEffect<State> => {\n  let effects: Effect[] | void = [];\n  switch (action.type) {\n\n    case \"complete-request\":\n      if (!action.response) break;\n      let response = JSON.parse(action.response) as ResponseType;\n\n      switch (action.name[0]) {\n        case userSignInRequestName: {\n          if (action.success) {\n            state = { ...state };\n            state = setUser(state, action.headers, response.data as UserResource);\n            state.toggles = { ...state.toggles };\n            state.toggles.showLogInModal = false;\n            state.errors = initialState.errors;\n            state.inputs = { ...state.inputs };\n            state.inputs.email = \"\";\n            state.inputs.password = \"\";\n            state.inputs.confirmPassword = \"\";\n\n            state.success = {...state.success};\n            state.success.signIn = \"Successful Login!\";\n            state.toggles.showTemporaryUserModal = true;\n\n            effects = effects.concat(setTimer(toggle<Toggles>(\"showTemporaryUserModal\", false), 1500))\n          } else {\n            state = { ...state };\n            state.errors = { ...state.errors };\n            state.errors.signIn = response.errors;\n            state.success = initialState.success;\n          }\n          break;\n        }\n        case confirmEmailRequestName: {\n          if (action.success) {\n            state = { ...state };\n            state.toggles = { ...state.toggles };\n            state.toggles.showLogInModal = true;\n\n            state.success = { ...state.success };\n            state.success.signUp = \"Account Confirmed! Try logging in now\";\n\n            effects = effects.concat(historyPush({ pathname: 'home/chords' }));\n          } else {\n            state = { ...state };\n            state.errors = { ...state.errors };\n            state.errors.signIn = response.errors;\n            state.toggles = { ...state.toggles };\n            state.toggles.showLogInModal = true;\n          }\n          break;\n        }\n        case userSignUpRequestName: {\n\n          if (action.success) {\n            state = { ...state };\n            state.toggles = { ...state.toggles };\n            state.toggles.showLogInModal = true;\n\n            state.success = { ...state.success };\n            state.success.signUp = \"A confirmation email was sent to you. Please confirm your email.\";\n            state.errors = initialState.errors;\n            effects = effects.concat(historyPush({ pathname: '/home/chords' }));\n\n          } else {\n            state = { ...state };\n            state.errors = { ...state.errors };\n            state.errors.signUp = response.errors;\n            state.success = initialState.success;\n          }\n\n          break;\n        }\n        case getLoggedInUserRequestName: {\n          if (action.success) {\n            state = setUser(state,action.headers, response.data);\n          }\n          break;\n        }\n        case getStripePublishableKeyRequestName: {\n          let stripeData = response.data as StripeResource;\n          state = { ...state };\n          state.stripe = { ...state.stripe };\n          state.stripe.publishableKey = stripeData.publishable_key;\n\n          state.stripe.plans = stripeData.plans;\n          state.stripe.chosenPlanID = stripeData.plans[0].id;\n          effects = effects.concat(getStripe(state.stripe.publishableKey));\n          break;\n        }\n\n        case changeEmailRequestName: {\n          if (action.success) {\n            state = { ...state };\n            state.loggedInUser = response.data;\n\n            state.success = { ...state.success };\n            state.success.signUp = \"Email has changed successfully. A confirmation email has been sent to your new email. Please confirm.\";\n\n            state = resetUser(state);\n          } else {\n            state = { ...state };\n            state.errors = { ...state.errors };\n            state.errors.changeAccountSettings = response.errors;\n            state.success = initialState.success;\n          }\n          break;\n        }\n        case changePasswordRequestName: {\n          if (action.success) {\n            state = { ...state };\n            state.loggedInUser = response.data;\n\n            state.success = { ...state.success };\n            state.success.changeAccountSettings = \"Passwords have been changed successfully\";\n            state.errors.changeAccountSettings = initialState.errors.changeAccountSettings;\n\n            state.inputs = { ...state.inputs };\n            state.inputs.oldPassword = \"\";\n            state.inputs.newPassword = \"\";\n            state.inputs.confirmNewPassword = \"\";\n\n          } else {\n            state = { ...state };\n            state.errors = { ...state.errors };\n            state.errors.changeAccountSettings = response.errors;\n            state.success = initialState.success;\n          }\n          break;\n        }\n\n        case generateNewAccessTokenRequestName: {\n          if (action.success) {\n            state = setUser(state, action.headers, response.data);\n\n            state = { ...state };\n            state.success = { ...state.success };\n            state.success.changeAccountSettings = \"Generated new access token\";\n            state.errors = { ...state.errors };\n            state.errors.changeAccountSettings = initialState.errors.changeAccountSettings;\n\n\n          } else {\n            state = { ...state };\n            state.errors = { ...state.errors };\n            state.errors.changeAccountSettings = response.errors;\n            state.success = initialState.success;\n          }\n          break;\n        }\n\n        case forgotPasswordRequestName: {\n          if (action.success) {\n            state = { ...state };\n            state.alerts = { ...state.alerts };\n            state.alerts.signIn = \"An email has been sent to reset your password.\";\n          }\n          break;\n        }\n\n        case resetPasswordRequestName: {\n          if (action.success) {\n            state = { ...state };\n            state.toggles = { ...state.toggles };\n            state.toggles.isResettingPassword = false;\n            state.errors = { ...state.errors };\n            state.errors.changeAccountSettings = initialState.errors.changeAccountSettings;\n\n            state.success = { ...state.success };\n            state.success.changeAccountSettings = \"Password reset successfully! Please try logging in now\";\n\n          } else {\n            state = { ...state };\n            state.errors = { ...state.errors };\n            state.errors.changeAccountSettings = response.errors;\n            state.success = initialState.success;\n          }\n          break;\n        }\n\n        case cancelSubscriptionRequestName: {\n          if (action.success) {\n            state = {...state};\n            state.loggedInUser = response.data;\n          }\n          break;\n        }\n        case changeSubscriptionRequestName: {\n          if (action.success) {\n            state = {...state};\n            state.loggedInUser = response.data;\n          }\n          break;\n        }\n      }\n      break;\n\n    case \"choose-stripe-plan\":\n      state = { ...state };\n      state.stripe = { ...state.stripe };\n      state.stripe.chosenPlanID = action.stripePlanId;\n      break;\n\n    case \"sign-in\": {\n      effects.push(requestAjax([userSignInRequestName],\n        {\n          url: AuthSignIn, method: \"PUT\", headers: {},\n          json: {\n            user: {\n              email: state.inputs.email,\n              password: state.inputs.password\n            }\n          }\n        }));\n\n      break;\n    }\n\n    case \"sign-out\": {\n      state = resetUser(state);\n      break;\n    }\n\n    case \"sign-up\": {\n      state = validateEmail(state, \"signUp\", \"email\");\n      state = validatePasswords(state, \"signUp\", \"password\", \"confirmPassword\");\n      state = validateStripeCard(state, action.token_id, \"signUp\");\n\n      if (state.errors.signUp.length === 0) {\n\n        effects.push(requestAjax([userSignUpRequestName],\n          {\n            url: AuthSignUp, method: \"POST\", headers: state.headers,\n            json: {\n              user: {\n                email: state.inputs.email,\n                password: state.inputs.password,\n                stripe_plan_id: state.stripe.chosenPlanID,\n                stripe_token_id: action.token_id\n              }\n            }\n          }));\n      }\n\n\n      break;\n    }\n\n    case \"error-on-sign-up\": {\n\n      state = { ...state };\n      state.errors = { ...state.errors };\n      state.errors.signUp = [action.error];\n\n      break;\n    }\n\n    case \"go-sign-up\": {\n      effects.push(historyPush({ pathname: '/sign-up' }));\n      break;\n    }\n\n    case \"resend-confirmation-email\":\n      effects.push(requestAjax([resendConfirmationEmailRequestName],\n        {\n          url: AuthResendConfirmationEmail, method: \"PUT\", headers: state.headers,\n          json: {\n            user: {\n              email: state.inputs.email,\n              password: state.inputs.password,\n            }\n          }\n        }));\n      break;\n\n    case \"toggle\":\n      if (action.target === \"changeEmail\") {\n        state = { ...state };\n        state.inputs = { ...state.inputs };\n        state.inputs.email = (state.loggedInUser && state.loggedInUser.email) || \"\";\n      } else if (action.target === \"showSettingsModal\") {\n        ({ state, effects } = getStripeData(state, effects));\n      }\n      break;\n\n    case \"change-email\":\n\n      state = validateEmail(state, \"changeAccountSettings\", \"newEmail\");\n\n      if (!state.loggedInUser) break;\n\n      if (state.errors.changeAccountSettings.length > 0) break;\n      effects.push(requestAjax([changeEmailRequestName],\n        {\n          url: ApiV1UsersPath + '/' + state.loggedInUser.id, method: \"PUT\", headers: state.headers,\n          json: {\n            user: { email: state.inputs.newEmail }\n          }\n        }));\n      break;\n\n    case \"change-password\":\n      state = validatePasswords(state, \"changeAccountSettings\", \"newPassword\", \"confirmNewPassword\");\n\n      if (!state.inputs.oldPassword) {\n        state.errors.changeAccountSettings.push({ type: \"password\", message: \"Current password is required\" });\n      }\n\n      if (!state.loggedInUser) break;\n\n      if (state.errors.changeAccountSettings.length > 0) break;\n\n      effects.push(requestAjax([changePasswordRequestName],\n        {\n          url: ApiV1UsersPath + '/' + state.loggedInUser.id, method: \"PUT\", headers: state.headers,\n          json: {\n            user: {\n              password: state.inputs.newPassword,\n              old_password: state.inputs.oldPassword\n            }\n          }\n        }));\n      break;\n\n    case \"generate-new-access-token\":\n      if (!state.loggedInUser) break;\n\n      effects.push(requestAjax([generateNewAccessTokenRequestName],\n        {\n          url: ApiV1UsersPath + '/' + state.loggedInUser.id + \"/generate_new_access_token\", method: \"PUT\", headers: state.headers,\n        }));\n      break;\n\n    case \"forgot-password\":\n\n      state = validateEmail(state, \"signIn\", \"email\");\n\n      if (state.errors.signIn.length > 0) break;\n\n      effects.push(requestAjax([forgotPasswordRequestName],\n        {\n          url: ApiV1UsersPath + \"/forgot_password\", method: \"PUT\", headers: state.headers,\n          json: {\n            user: {\n              email: state.inputs.email\n            }\n          }\n        }));\n      break;\n\n    case \"reset-password\":\n      state = validatePasswords(state, \"changeAccountSettings\", \"newPassword\", \"confirmNewPassword\");\n\n      if (state.errors.changeAccountSettings.length > 0) break;\n\n      effects.push(requestAjax([resetPasswordRequestName],\n        {\n          url: ApiV1UsersPath + \"/reset_password\", method: \"PUT\", headers: state.headers,\n          json: {\n            reset_password_token: state.inputs.resetPasswordToken,\n            user: {\n              email: state.inputs.email,\n              password: state.inputs.newPassword,\n            }\n          }\n        }));\n      break;\n\n    case \"cancel-subscription\":\n      if (!state.loggedInUser) break;\n      effects.push(requestAjax([cancelSubscriptionRequestName],\n        {\n          method: \"PUT\", url: ApiV1UsersPath + \"/\" + state.loggedInUser.id + \"/cancel_subscription\", headers: state.headers\n        }));\n      break;\n\n    case \"change-subscription\":\n      if (!state.loggedInUser) break;\n      effects.push(requestAjax([changeSubscriptionRequestName],\n        {\n          method: \"PUT\", url: ApiV1UsersPath + \"/\" + state.loggedInUser.id + \"/change_subscription\", headers: state.headers,\n          json: {\n            user: {\n              stripe_plan_id: state.stripe.chosenPlanID,\n              stripe_token_id: action.token_id\n            }\n          }\n        }));\n      break;\n\n  }\n\n  return { state, effects };\n};\n\nfunction validateEmail<Error extends Extract<keyof typeof initialState.errors, string>,\n  Inputs extends Extract<keyof typeof initialState.inputs, string>>\n  (state: State, errorType: Error, emailType: Inputs): State {\n  state = { ...state };\n  state.errors = { ...state.errors };\n  state.errors[errorType] = [];\n\n  if (!state.inputs[emailType]) {\n    state.errors[errorType].push({ type: \"email\", message: \"Email is required\" });\n  } else if (!EMAIL_REGEXP.test(state.inputs[emailType])) {\n    state.errors[errorType].push({ type: \"email\", message: \"Email is invalid\" });\n  }\n\n  return state;\n}\n\nfunction validatePasswords<Error extends Extract<keyof typeof initialState.errors, string>,\n  Inputs extends Extract<keyof typeof initialState.inputs, string>>\n  (state: State, errorType: Error, password: Inputs, confirmPassword: Inputs): State {\n  state = { ...state };\n  state.errors = { ...state.errors };\n  state.errors[errorType] = [];\n\n  if (!state.inputs[password]) {\n    state.errors[errorType].push({ type: \"password\", message: \"Password is required\" });\n  } else if (state.inputs[password].length < state.minimumPasswordLength) {\n    state.errors[errorType].push({\n      type: \"password\",\n      message: \"Password minimum length is \" + state.minimumPasswordLength\n    });\n  }\n\n  if (state.inputs[password] !== state.inputs[confirmPassword]) {\n    state.errors[errorType].push({ type: \"confirm_password\", message: \"Password mismatch\" });\n  }\n\n  return state;\n}\n\nfunction validateStripeCard<Error extends Extract<keyof typeof initialState.errors, string>>\n  (state: State, tokenId: string, errorType: keyof typeof state.errors): State {\n  state = { ...state };\n  state.errors = { ...state.errors };\n  state.errors[errorType] = [];\n\n  if (!tokenId) {\n    state.errors[errorType].push({ type: \"stripe_card\", message: \"Must insert valid card\" });\n  }\n\n  return state;\n}\n\n\nexport const confirmEmailRequestName = \"confirm-email\";\nexport const userSignInRequestName = \"user-sign-in\";\nexport const userSignUpRequestName = \"user-sign-up\";\nexport const resendConfirmationEmailRequestName = \"resend-confirmation-email\";\nexport const generateNewAccessTokenRequestName = \"user-generate-new-access-token\";\nexport const changeEmailRequestName = \"change-email\";\nexport const changePasswordRequestName = \"change-password\";\nexport const forgotPasswordRequestName = \"forgot-password\";\nexport const resetPasswordRequestName = \"reset-password\";\nexport const cancelSubscriptionRequestName = \"cancel-subscription\";\nexport const changeSubscriptionRequestName = \"change-subscription\";","import {Effect, Services} from \"./services\";\nimport {Action} from \"../root-reducer\";\nimport {setStripeObject} from \"../../reducers/stripe-reducer\";\n\nexport interface GetStripeEffect {\n  effectType: \"get-stripe\"\n  apiKey: string\n}\n\nexport function getStripe(apiKey: string): GetStripeEffect {\n  return {\n    effectType: \"get-stripe\",\n    apiKey,\n  }\n}\n\nexport function withStripe(dispatch: (action: Action) => void): Services {\n  let getStripeTimeout: number;\n  return (effect: Effect) => {\n\n    switch (effect.effectType) {\n      case \"get-stripe\":\n        if ((window as any).Stripe) {\n\n          dispatch(setStripeObject((window as any).Stripe(effect.apiKey)));\n\n        } else {\n\n          const getStripeScript = () => {\n            let stripeScript = document.querySelector('#stripe-js');\n\n            if (stripeScript){\n              stripeScript.addEventListener('load', () => {\n                dispatch(setStripeObject((window as any).Stripe(effect.apiKey)));\n              });\n            } else {\n              clearTimeout(getStripeTimeout);\n              getStripeTimeout = window.setTimeout(getStripeScript,300);\n            }\n          };\n\n          getStripeScript();\n        }\n        break;\n    }\n\n  }\n}\n","import * as React from \"react\";\nimport {State} from \"../../state\";\nimport {Action} from \"../../core/root-reducer\";\nimport {SignIn} from \"./sign-in\";\nimport {ResetPassword} from \"./reset-password\";\n\nexport function LogIn(dispatch: (action: Action) => void) {\n\n  const SignInContent = SignIn(dispatch);\n  const ResetPasswordContent = ResetPassword(dispatch);\n\n  return (state: State) => {\n    return (\n      <form>\n        {state.toggles.isResettingPassword ?\n          ResetPasswordContent(state)\n          :\n          SignInContent(state)\n        }\n      </form>\n    );\n  }\n}","import {Action} from \"../../core/root-reducer\";\nimport {Loading} from \"../../components/loading\";\nimport {Input} from \"../../components/input\";\nimport {inputChangeDispatcher} from \"../../reducers/input-reducer\";\nimport * as React from \"react\";\nimport {State} from \"../../state\";\nimport {stringifyRequestName} from \"../../reducers/complete-request-reducer\";\nimport {\n  forgotPassword,\n  goSignUp,\n  resendConfirmationEmail,\n  resendConfirmationEmailRequestName,\n  signIn\n} from \"../../reducers/login-reducer\";\nimport {changeKeyboardMap, KeyBoardMapType} from '../../reducers/keyboard-reducer';\n\nexport function SignIn(dispatch: (action: Action) => void) {\n\n  const dispatcher = {\n    signIn: () => dispatch(signIn()),\n    goSignUp: () => dispatch(goSignUp()),\n    resendConfirmationEmail: () => dispatch(resendConfirmationEmail()),\n    forgotPassword: () => dispatch(forgotPassword()),\n    changeKeyBoardMap: (keyboardMap: KeyBoardMapType) => dispatch(changeKeyboardMap(keyboardMap)),\n  };\n\n  return (state: State) => {\n\n    let isResendingConfirmationEmail = state.loadingRequests[stringifyRequestName([resendConfirmationEmailRequestName])];\n\n    return <div>\n      {state.errors.signIn && state.errors.signIn.map(error => {\n\n        return <div className={\"red\"} key={\"sign-in-error_\" + error.type}>\n          {error.message}\n          {error.type === \"confirmation\" && (\n            <div>\n              {isResendingConfirmationEmail ?\n                <div className={`dib ma2 br4 pa2 bg-white gray`}>\n                  Resending\n                  <Loading className={\"mh2\"}/>\n                </div>\n                :\n                <div onClick={dispatcher.resendConfirmationEmail} className={\"pointer blue\"}>\n                  Resend confirmation email\n                </div>\n              }\n            </div>\n          )}\n          {error.type === 'sign_in' && (\n            <div className=\"gray pointer f7\" onClick={dispatcher.forgotPassword}>\n              Forgot your password?\n            </div>\n          )}\n        </div>\n      })}\n\n      {state.alerts.signIn && (\n        <div className=\"gray pointer f7\">\n          {state.alerts.signIn}\n        </div>\n      )}\n\n      {state.success.signUp && <div className={\"green\"}> {state.success.signUp} </div>}\n      {state.success.changeAccountSettings && <div className={\"green\"}> {state.success.changeAccountSettings} </div>}\n      <div className={\"db ma2\"}>\n        <div>\n          Email:\n        </div>\n        <Input type=\"email\" value={state.inputs.email} autoComplete={\"email\"}\n            onFocus={() => dispatcher.changeKeyBoardMap(\"none\")}\n            onBlur={()=> dispatcher.changeKeyBoardMap(state.keyboardMapPriorToInput)}\n               onChange={inputChangeDispatcher(dispatch, \"email\")}/>\n      </div>\n      <div className={\"db ma2\"}>\n        <div>\n          Password:\n        </div>\n        <Input type=\"password\" value={state.inputs.password} autoComplete={\"current-password\"}\n            onFocus={() => dispatcher.changeKeyBoardMap(\"none\")}\n            onBlur={()=> dispatcher.changeKeyBoardMap(state.keyboardMapPriorToInput)}\n               onChange={inputChangeDispatcher(dispatch, \"password\")}/>\n      </div>\n      <div className={\"db ma2\"}>\n        <div className={\"dib ma2 bg-light-gray dark-gray br4 pa2 pointer\"} onClick={dispatcher.goSignUp}>\n          or Sign Up\n        </div>\n        <div className={\"dib ma2 bg-light-blue white br4 pa2 pointer\"} onClick={dispatcher.signIn}>\n          Sign In\n        </div>\n      </div>\n    </div>;\n  }\n}\n","import {Action} from \"../../core/root-reducer\";\nimport {Input} from \"../../components/input\";\nimport {inputChangeDispatcher} from \"../../reducers/input-reducer\";\nimport * as React from \"react\";\nimport {State} from \"../../state\";\nimport {\n  forgotPassword, resetPassword,\n} from \"../../reducers/login-reducer\";\nimport {changeKeyboardMap, KeyBoardMapType} from '../../reducers/keyboard-reducer';\n\nexport function ResetPassword(dispatch: (action: Action) => void) {\n\n  const dispatcher = {\n    forgotPassword: () => dispatch(forgotPassword()),\n    resetPassword: () => dispatch(resetPassword()),\n    changeKeyBoardMap: (keyboardMap: KeyBoardMapType) => dispatch(changeKeyboardMap(keyboardMap)),\n  };\n\n  return (state: State) => {\n\n    return <div>\n      {state.errors.changeAccountSettings && state.errors.changeAccountSettings.map(error => {\n\n        return <div className={\"red\"} key={\"sign-in-error_\" + error.type}>\n          {error.message}\n          {error.type === 'reset_password' && (\n            <div className=\"gray pointer f7\" onClick={dispatcher.forgotPassword}>\n              Resend reset password\n            </div>\n          )}\n        </div>\n      })}\n\n      {state.alerts.signIn && (\n        <div className=\"gray f7\">\n          {state.alerts.signIn}\n        </div>\n      )}\n\n      {state.success.changeAccountSettings && <div className={\"green\"}> {state.success.changeAccountSettings} </div>}\n      <div className={\"db ma2\"}>\n        <div>\n          For Email:\n        </div>\n        <Input type=\"email\" disabled value={state.inputs.email} autoComplete={\"email\"}\n            onFocus={() => dispatcher.changeKeyBoardMap(\"none\")}\n            onBlur={()=> dispatcher.changeKeyBoardMap(state.keyboardMapPriorToInput)}\n               onChange={inputChangeDispatcher(dispatch, \"email\")} className=\"bg-light-gray\"/>\n      </div>\n      <div className={\"db ma2\"}>\n        <div>\n          New Password:\n        </div>\n        <Input type=\"password\" value={state.inputs.newPassword}\n            onFocus={() => dispatcher.changeKeyBoardMap(\"none\")}\n            onBlur={()=> dispatcher.changeKeyBoardMap(state.keyboardMapPriorToInput)}\n               onChange={inputChangeDispatcher(dispatch, \"newPassword\")}/>\n      </div>\n      <div className={\"db ma2\"}>\n        <div>\n          Confirm New Password:\n        </div>\n        <Input type=\"password\" value={state.inputs.confirmNewPassword}\n            onFocus={() => dispatcher.changeKeyBoardMap(\"none\")}\n            onBlur={()=> dispatcher.changeKeyBoardMap(state.keyboardMapPriorToInput)}\n               onChange={inputChangeDispatcher(dispatch, \"confirmNewPassword\")}/>\n      </div>\n      <div className={\"db ma2\"}>\n        <div className={\"dib ma2 bg-light-blue white br4 pa2 pointer\"} onClick={dispatcher.resetPassword}>\n          Reset Password\n        </div>\n      </div>\n    </div>;\n  }\n}\n","import * as React from \"react\";\n\nexport function HeaderTitle() {\n\n  return <div className=\"w-100 bg-light-gray tc\">\n    <div className=\"ma2 pa2 f4 gray b\">\n      K O R D P O S E\n    </div>\n  </div>\n}","import * as React from \"react\";\nimport { ClassAndChildren } from \"../core/reducers\";\n\ninterface SVGProps extends ClassAndChildren {\n  width?: number\n  height?: number\n}\n\nexport const SVGCheckMark = (props: SVGProps) => {\n  return <svg viewBox=\"0 0 640 640\" width={32} height={32} {...props}>\n    <path d=\"M471.59 151.75L301.75 404.13L217.62 296.19\" opacity=\"1\" fillOpacity=\"0\" strokeWidth=\"20\"\n      strokeOpacity=\"1\" />\n  </svg>\n};\n\nexport const SVGUser = (props: SVGProps) => {\n  return <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 84.75 117.58\" width={20} height={20} {...props}>\n    <title>user</title>\n    <circle cx=\"43.8\" cy=\"20.75\" r=\"20.25\" strokeMiterlimit=\"10\" />\n    <path d=\"M137.16,152.93\" transform=\"translate(-132.6 -53.28)\" strokeMiterlimit=\"10\" />\n    <path d=\"M142.65,160.11\" transform=\"translate(-132.6 -53.28)\" strokeMiterlimit=\"10\" />\n    <path d=\"M135.9,168.54\" transform=\"translate(-132.6 -53.28)\" strokeMiterlimit=\"10\" />\n    <path d=\"M133.11,170.85c-.15-46.33,25.33-76.94,43.3-76.57,17.75.37,41.41,31.29,40.41,76.38\"\n      transform=\"translate(-132.6 -53.28)\" strokeMiterlimit=\"10\" />\n    <path d=\"M233.89,120.92\" transform=\"translate(-132.6 -53.28)\" strokeMiterlimit=\"10\" />\n    <path d=\"M124.73,77.33\" transform=\"translate(-132.6 -53.28)\" strokeMiterlimit=\"10\" />\n    <path d=\"M250.84,102.48\" transform=\"translate(-132.6 -53.28)\" strokeMiterlimit=\"10\" />\n    <path d=\"M231.09,96.52\" transform=\"translate(-132.6 -53.28)\" strokeMiterlimit=\"10\" />\n  </svg>\n};\n\nexport const SVGSoundOn = (props: SVGProps) => {\n  return <svg id=\"squared\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 174.67 131.96\" width={20}\n    height={20} {...props}><title>sound-on-svg</title>\n    <path\n      d=\"M63,87.37H33.56a17.15,17.15,0,0,0-4.23,3.32A13.71,13.71,0,0,0,27,94.27v33.27a8.21,8.21,0,0,0,3,3.38,11,11,0,0,0,3.58,1.49H63l41.58,35.3a11.46,11.46,0,0,0,4.63.85,11.24,11.24,0,0,0,4-.85V42.33a8.11,8.11,0,0,0-4-1.19,8.28,8.28,0,0,0-4.63,1.19Z\"\n      transform=\"translate(-26.47 -40.63)\" strokeMiterlimit=\"10\" />\n    <path d=\"M118.29,160.61\" transform=\"translate(-26.47 -40.63)\" strokeMiterlimit=\"10\" />\n    <path\n      d=\"M129,144c-1.87-.7,4.58-13.54,4.73-35.24.16-22.58-6.63-36-4.73-36.72,2.21-.82,15.09,16.12,14.86,36.66C143.64,128.59,131.19,144.82,129,144Z\"\n      transform=\"translate(-26.47 -40.63)\" strokeMiterlimit=\"10\" />\n    <path\n      d=\"M146.28,53.62c-2.08,1,12.66,21,13.25,52.2.55,30-12.36,49.65-10.29,50.55,2.34,1,22.33-22.35,21.66-51.6C170.22,75.09,148.58,52.45,146.28,53.62Z\"\n      transform=\"translate(-26.47 -40.63)\" strokeMiterlimit=\"10\" />\n    <path\n      d=\"M173.45,41.16c-2.43,1.06,14.72,27.25,14.24,67.11-.46,38-16.66,62.72-14.24,63.78,2.66,1.18,26.49-27,27.17-63.48C201.34,70.24,176.13,40,173.45,41.16Z\"\n      transform=\"translate(-26.47 -40.63)\" strokeMiterlimit=\"10\" />\n  </svg>\n};\n\nexport const SVGSoundOff = (props: SVGProps) => {\n  return <svg id=\"off\" data-name=\"squared copy\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 118.57 148.75\"\n    width={20}\n    height={20} {...props}>\n    <title>sound-off-svg</title>\n    <path\n      d=\"M63,87.37H33.56a17.15,17.15,0,0,0-4.23,3.32A13.71,13.71,0,0,0,27,94.27v33.27a8.21,8.21,0,0,0,3,3.38,11,11,0,0,0,3.58,1.49H63l41.58,35.3a11.46,11.46,0,0,0,4.63.85,11.24,11.24,0,0,0,4-.85V42.33a8.11,8.11,0,0,0-4-1.19,8.28,8.28,0,0,0-4.63,1.19Z\"\n      transform=\"translate(-26.47 -31.47)\" strokeMiterlimit=\"10\" />\n    <path d=\"M118.29,160.61\" transform=\"translate(-26.47 -31.47)\" strokeMiterlimit=\"10\" />\n    <polygon points=\"113.95 1.11 118.02 16.31 20.29 147.76 13.63 132.58 113.95 1.11\"\n      strokeMiterlimit=\"10\" />\n  </svg>\n};\n\nexport const SVGSine = (props: SVGProps) => {\n  return <svg id=\"sine\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 166.3 111.04\" width={20}\n    height={20} {...props}><title>sine</title>\n    <path\n      d=\"M30.09,113.22c7.65-24.1,19.07-49.86,34.53-50.75C97,60.61,117,169.59,151.41,168.47c10.45-.33,24.48-10.87,40.24-55.55\"\n      transform=\"translate(-27.71 -59.94)\" fill=\"none\" strokeMiterlimit=\"10\" strokeWidth=\"15\" />\n  </svg>\n};\n\nexport const SVGTriangle = (props: SVGProps) => {\n  return <svg width={20} height={20} {...props} id=\"triangle\" xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 111.74 91.51\">\n    <title>triangle</title>\n    <polyline points=\"2.12 90.18 55.73 4.7 109.63 90.18\" fill=\"none\" strokeMiterlimit=\"10\"\n      strokeWidth=\"15\" />\n  </svg>\n};\n\nexport const SVGSawtooth = (props: SVGProps) => {\n  return <svg width={20} height={20} {...props} id=\"sawtooth\" xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 105.34 112.57\"><title>sawtooth</title>\n    <polyline points=\"102.84 56.28 102.84 106.53 2.5 6.04 2.5 56.28\" fill=\"none\" strokeMiterlimit=\"10\"\n      strokeWidth=\"15\" />\n  </svg>\n};\n\nexport const SVGSquare = (props: SVGProps) => {\n  return <svg width={20} height={20} {...props} id=\"square\" xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 112.9 112.51\"><title>square</title>\n    <polyline points=\"110.4 56.43 110.4 110.01 56.51 110.01 56.51 56.43 56.51 2.5 2.5 2.5 2.5 56.25\" fill=\"none\"\n      strokeMiterlimit=\"10\" strokeWidth=\"15\" />\n  </svg>\n};\n\nexport const SVGPlus = (props: SVGProps) => {\n  return <svg width={12} height={12} {...props}\n    id=\"plus\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 113.81 113.51\"><title>plus</title>\n    <line x1=\"56.91\" x2=\"56.91\" y2=\"113.51\" fill=\"none\" strokeMiterlimit=\"10\" strokeWidth=\"15\" />\n    <line y1=\"56.76\" x2=\"113.81\" y2=\"56.76\" fill=\"none\" strokeMiterlimit=\"10\" strokeWidth=\"15\" />\n  </svg>\n};\n\nexport const SVGMinus = (props: SVGProps) => {\n  return <svg width={12} height={12} {...props}\n    id=\"minus\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 113.81 15\"><title>minus</title>\n    <line y1=\"7.5\" x2=\"113.81\" y2=\"7.5\" fill=\"none\" strokeMiterlimit=\"10\" strokeWidth=\"15\" />\n  </svg>\n};\n\nexport const SVGStar = (props: SVGProps) => {\n  return <svg width={12} height={12} {...props}\n              id=\"star\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 268.07 257.36\">\n    <title>star</title>\n    <path d=\"M359.33,171.81\" transform=\"translate(-134.02 -15.21)\" strokeMiterlimit=\"10\" strokeWidth=\"15\"/>\n    <polygon points=\"218.23 254.33 135.49 211.95 53.87 256.44 68.39 164.25 1.07 99.95 92.78 85.35 132.8 1.13 174.96 84.3 267 96.55 201.35 162.55 218.23 254.33\" strokeMiterlimit=\"10\" strokeWidth=\"15\"/>\n  </svg>\n};\n\nexport const SVGChords = (props: SVGProps) => {\n  return <svg width={32} height={32} {...props}\n    id=\"chords\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 113.28 75.85\"><title>chords</title>\n    <rect x=\"0.5\" y=\"0.5\" width=\"52.36\" height=\"37.43\" strokeMiterlimit=\"10\" />\n    <rect x=\"0.5\" y=\"37.93\" width=\"37.43\" height=\"37.43\" fill=\"none\" strokeMiterlimit=\"10\" />\n    <rect x=\"37.93\" y=\"37.93\" width=\"37.43\" height=\"37.43\" fill=\"none\" strokeMiterlimit=\"10\" />\n    <rect x=\"75.35\" y=\"37.93\" width=\"37.43\" height=\"37.43\" fill=\"none\" strokeMiterlimit=\"10\" />\n    <circle cx=\"19.37\" cy=\"57.77\" r=\"8.55\" strokeMiterlimit=\"10\" />\n    <path d=\"M95.59,68.87V106.3h51.48V68.87Zm16,27.27a8.56,8.56,0,1,1,8.1-8.55A8.32,8.32,0,0,1,111.64,96.14Z\"\n      transform=\"translate(-34.29 -68.37)\" strokeMiterlimit=\"10\" />\n  </svg>\n};\n\nexport const SVGSong = (props: SVGProps) => {\n  return <svg width={16} height={16} {...props}\n    id=\"songs\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 39.04 36.69\"><title>writing</title>\n    <path\n      d=\"M72.11,85.29c1.31-2.13,3.43-4.88,6.1-5,4.22-.16,5.37,6.54,9.55,6.64,4.41.1,5.11-7.29,9.07-6.14,3.51,1,5.33,7.53,7.7,5.64A7,7,0,0,0,106.3,83\"\n      transform=\"translate(-70.94 -78.93)\" fill=\"none\" strokeMiterlimit=\"10\" strokeWidth=\"2.75\" />\n    <path\n      d=\"M72.11,98.57c1.4-2.19,3.67-5,6.52-5.13,4.51-.16,5.73,6.75,10.21,6.85,4.71.1,5.46-7.52,9.69-6.34,3.76,1,5.7,7.77,8.23,5.82a7.12,7.12,0,0,0,1.89-3.59\"\n      transform=\"translate(-70.94 -78.93)\" fill=\"none\" strokeMiterlimit=\"10\" strokeWidth=\"2.75\" />\n    <path\n      d=\"M72.11,112.54c1.4-2.2,3.67-5,6.52-5.14,4.51-.16,5.73,6.75,10.21,6.85,4.71.1,5.46-7.52,9.69-6.34,3.76,1,5.7,7.77,8.23,5.82a7.12,7.12,0,0,0,1.89-3.59\"\n      transform=\"translate(-70.94 -78.93)\" fill=\"none\" strokeMiterlimit=\"10\" strokeWidth=\"2.75\" />\n  </svg>\n};\n\nexport const SVGOctave = (props: SVGProps) => {\n  return <svg width={12} height={12} {...props}\n    id=\"octave\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 74.81 74.81\"><title>octave</title>\n    <circle cx=\"37.41\" cy=\"37.41\" r=\"36.03\" strokeMiterlimit=\"10\" strokeWidth=\"2.75\" />\n  </svg>\n};\n\nexport const SVGBack = (props: SVGProps) => {\n  return <svg width={12} height={12} {...props}\n    id=\"back\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 72.68 115.75\"><title>back</title>\n    <polyline points=\"69.38 3.75 7.59 58.13 69.38 111.98\" fill=\"#fff\" stroke=\"#000\" strokeMiterlimit=\"10\"\n      strokeWidth=\"10\" />\n  </svg>\n};\n\n","import * as React from \"react\";\nimport {State} from \"../state\";\nimport {Action} from \"../core/root-reducer\";\nimport {\n  chooseStripePlan,\n} from \"../reducers/login-reducer\";\n\nexport function StripePlans(dispatch: (action: Action) => void) {\n  const dispatcher = {\n    choosePlan: (stripePlanId: string) => dispatch(chooseStripePlan(stripePlanId)),\n  };\n\n  return (state: State) => {\n    return (\n      <div>\n        {state.stripe.plans.length > 0 &&\n        state.stripe.plans.map(stripePlan => {\n\n          let symbol = \"\";\n          let amount = stripePlan.amount;\n          switch (stripePlan.currency) {\n            case \"usd\":\n              symbol = \"$\";\n              amount = amount / 100;\n              break;\n          }\n\n          return <div key={\"stripe-plan-\" + stripePlan.id}\n                      onClick={() => dispatcher.choosePlan(stripePlan.id)}\n                      className={\"db ba b--light-gray ma2 pa2 br2 tc hover-bg-light-gray pointer \" + (state.stripe.chosenPlanID === stripePlan.id ? \"bg-light-gray\" : \"\")}>\n\n            <div>\n              {symbol}{amount}\n              <div className={\"di gray ma1\"}>\n                {stripePlan.currency}\n              </div>\n              / {stripePlan.interval}\n            </div>\n\n            <div className={\"ma2\"}/>\n            <div className={\"f7\"}>\n              Includes:\n              <div>\n                ・Access to all chords\n              </div>\n              <div>\n                ・Access to all variations of chords\n              </div>\n              <div>\n                ・Saving draft chords\n              </div>\n              <div>\n                ・Saving synthesizer parameters\n              </div>\n\n              <div className={\"ma2\"}/>\n              <div>\n                Soon:\n                <div>\n                  ・Create and Save songs\n                </div>\n                <div>\n                  ・Create and Save custom chords\n                </div>\n              </div>\n            </div>\n\n          </div>\n        })\n        }\n      </div>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { UserResource } from \"../resources/user-resource\";\n\ninterface StripeSubscriptionProps {\n  user: UserResource | void\n}\n\nexport function StripeSubscription(props: StripeSubscriptionProps): JSX.Element {\n\n  if (!props.user) return <div>none</div>;\n\n  let d = new Date();\n  d.setTime(props.user.stripe_subscription.current_period_end * 1000);\n\n  return (<div>\n    <div>\n      {props.user.stripe_subscription.plan.interval} - {props.user.stripe_subscription.status} {d.toLocaleDateString()}\n    </div>\n  </div>\n  )\n\n}\n","import {CardElement, Elements, injectStripe, ReactStripeElements, StripeProvider} from \"react-stripe-elements\";\nimport {ResponseError} from \"../reducers/login-reducer\";\nimport * as React from \"react\";\nimport {Loading} from \"./loading\";\n\ninterface FormProps extends ReactStripeElements.InjectedStripeProps {\n  apiKey: string\n  onSubmit: (token_id: string) => void\n  onError: (error: ResponseError) => void\n  errors: ResponseError[]\n  isLoadingRequest: boolean\n  loadingMessage: string\n  submitMessage: string\n}\n\nclass Form extends React.Component<FormProps> {\n\n  constructor(props: FormProps) {\n    super(props);\n    this.submit = this.submit.bind(this);\n  }\n\n  async submit() {\n    if (!this.props.stripe) return;\n\n    const { error, token } = await this.props.stripe.createToken({});\n    if (!error && token) {\n      this.props.onSubmit(token.id);\n    } else if (error && error.message) {\n      console.error(error);\n      this.props.onError({ type: \"stripe_card\", message: error.message });\n    }\n\n  }\n\n\n  render() {\n    return (\n      <div>\n        <div className={\"pa2 mv2 ba br3 b--moon-gray\"}>\n          <CardElement />\n        </div>\n        {this.props.errors.map(errorMessage => {\n          return <div className={\"red\"} key={\"sign-up-error_\" + errorMessage.type}>\n            {errorMessage.message}\n          </div>\n        })}\n        <div className={\"db ma2\"}>\n          {this.props.isLoadingRequest ?\n            <div className={`dib ma2 br4 pa2 bg-white ba b--light-gray gray`}>\n              {this.props.loadingMessage}\n              <Loading className={\"mh2\"} />\n            </div>\n            :\n            <div className={\"bg-light-gray pointer ma2 pa2 tc br2\"}\n                 onClick={this.submit}>\n              {this.props.submitMessage}\n            </div>\n          }\n        </div>\n      </div>\n    )\n  }\n}\n\nconst FormContent = injectStripe(Form);\n\nexport function StripeForm(props: FormProps) {\n  return <StripeProvider apiKey={props.apiKey}>\n    <Elements>\n      <FormContent {...props}/>\n    </Elements>\n  </StripeProvider>\n}","import * as React from \"react\";\nimport {State} from \"../../state\";\nimport {signOut} from \"../../reducers/login-reducer\";\nimport {Action} from \"../../core/root-reducer\";\nimport {HeaderTitle} from \"../../components/header-title\";\nimport {toggleDispatcher} from \"../../reducers/toggle-reducer\";\nimport {AccountSettings} from \"./account-settings\";\n\nexport function UserInfoModal(dispatch: (action: Action) => void) {\n  const dispatcher = {\n    signOut: () => dispatch(signOut()),\n  };\n\n  const AccountSettingsContent = AccountSettings(dispatch);\n\n  return (state: State) => {\n    return (\n      <div className={\"w-100 h-100\"}>\n\n        <HeaderTitle/>\n        {state.toggles.showSettingsModal ?\n          AccountSettingsContent(state)\n          :\n          <div>\n            <div className={\"pointer b--light-gray hover-bg-black-10 pa2\"}\n                 onClick={toggleDispatcher(dispatch, \"showSettingsModal\")}>\n              Settings\n            </div>\n            <div className={\"pointer bt b--light-gray hover-bg-black-10 pa2\"} onClick={dispatcher.signOut}>\n              Sign Out\n            </div>\n          </div>\n        }\n      </div>\n    );\n  }\n}","import * as React from \"react\";\nimport {State, Toggles} from \"../../state\";\nimport {\n  changeEmail,\n  changeEmailRequestName,\n  changePassword,\n  changePasswordRequestName,\n  generateNewAccessToken,\n  generateNewAccessTokenRequestName,\n  cancelSubscription,\n  cancelSubscriptionRequestName,\n  ResponseError, changeSubscriptionRequestName, errorOnSignUp, changeSubscription\n} from \"../../reducers/login-reducer\";\nimport {Action} from \"../../core/root-reducer\";\nimport {Input} from \"../../components/input\";\nimport {inputChangeDispatcher} from \"../../reducers/input-reducer\";\nimport {toggleDispatcher} from \"../../reducers/toggle-reducer\";\nimport {SVGBack} from \"../../components/svgs\";\nimport {Loading} from \"../../components/loading\";\nimport {stringifyRequestName} from \"../../reducers/complete-request-reducer\";\nimport {StripePlans} from \"../../components/stripe-plans\";\nimport {StripeSubscription} from \"../../components/stripe-subscription\";\nimport {StripeForm} from \"../../components/stripe-form\";\nimport {changeKeyboardMap, KeyBoardMapType} from '../../reducers/keyboard-reducer';\n\n\nexport function AccountSettings(dispatch: (action: Action) => void) {\n  const dispatcher = {\n    generateNewAccessToken: () => dispatch(generateNewAccessToken()),\n    changeEmail: () => dispatch(changeEmail()),\n    changePassword: () => dispatch(changePassword()),\n    cancelSubscription: () => dispatch(cancelSubscription()),\n    changeSubscription: (token_id: string) => dispatch(changeSubscription(token_id)),\n    error: (error: ResponseError) => dispatch(errorOnSignUp(error)),\n    changeKeyBoardMap: (keyboardMap: KeyBoardMapType) => dispatch(changeKeyboardMap(keyboardMap)),\n  };\n\n  const StripePlansContent = StripePlans(dispatch);\n\n  return (state: State) => {\n\n    const editingSettingsKey = function (): Extract<keyof Toggles, string> | void {\n      if (state.toggles.changeEmail) {\n        return \"changeEmail\";\n      } else if (state.toggles.changeAccessToken) {\n        return \"changeAccessToken\";\n      } else if (state.toggles.changePassword) {\n        return \"changePassword\";\n      } else if (state.toggles.changeSubscription) {\n        return \"changeSubscription\";\n      } else {\n        return;\n      }\n    }();\n\n    const isSubscriptionActive = (state.loggedInUser && state.loggedInUser.stripe_subscription.status === \"active\") || undefined;\n\n    return (\n      <div className={\"word-wrap\"}>\n\n        <form>\n          {state.errors.changeAccountSettings && state.errors.changeAccountSettings.map(error => {\n            return <div className={\"red\"} key={\"sign-in-error_\" + error.type}>\n              {error.message}\n            </div>\n          })}\n          {state.success.changeAccountSettings &&\n          <div className={\"green\"}> {state.success.changeAccountSettings} </div>}\n          {editingSettingsKey ?\n            <div>\n              <div className={\"pointer\"} onClick={toggleDispatcher(dispatch, editingSettingsKey, false)}>\n                <SVGBack/>\n              </div>\n\n              {state.toggles.changeEmail &&\n              <div className={\"db ma2\"}>\n                  <div>\n                      Email:\n                  </div>\n                  <Input type=\"email\" value={state.inputs.newEmail}\n                    onFocus={() => dispatcher.changeKeyBoardMap(\"none\")}\n                    onBlur={()=> dispatcher.changeKeyBoardMap(state.keyboardMapPriorToInput)}\n                         onChange={inputChangeDispatcher(dispatch, \"newEmail\")}/>\n                {state.loadingRequests[stringifyRequestName([changeEmailRequestName])] ?\n                  <div className={`dib ma2 br4 pa2 bg-white ba b--light-gray gray`}>\n                    Changing Email\n                    <Loading className={\"mh2\"}/>\n                  </div>\n                  :\n                  <div className={\"pointer bg-light-gray ma2 pa2 tc shadow-1 br2\"}\n                       onClick={dispatcher.changeEmail}>\n                    Change Email\n                  </div>\n                }\n              </div>\n              }\n\n              {state.toggles.changePassword &&\n              <div>\n                  <div className={\"db ma2\"}>\n                      <div>\n                          Old Password:\n                      </div>\n                      <Input type=\"password\" value={state.inputs.oldPassword}\n                        onFocus={() => dispatcher.changeKeyBoardMap(\"none\")}\n                        onBlur={()=> dispatcher.changeKeyBoardMap(state.keyboardMapPriorToInput)}\n                             onChange={inputChangeDispatcher(dispatch, \"oldPassword\")}/>\n                  </div>\n                  <div className={\"db ma2\"}>\n                      <div>\n                          New Password:\n                      </div>\n                      <Input type=\"password\" value={state.inputs.newPassword}\n                        onFocus={() => dispatcher.changeKeyBoardMap(\"none\")}\n                        onBlur={()=> dispatcher.changeKeyBoardMap(state.keyboardMapPriorToInput)}\n                             onChange={inputChangeDispatcher(dispatch, \"newPassword\")}/>\n                  </div>\n                  <div className={\"db ma2\"}>\n                      <div>\n                          Confirm New Password:\n                      </div>\n                      <Input type=\"password\" value={state.inputs.confirmNewPassword}\n                        onFocus={() => dispatcher.changeKeyBoardMap(\"none\")}\n                        onBlur={()=> dispatcher.changeKeyBoardMap(state.keyboardMapPriorToInput)}\n                             onChange={inputChangeDispatcher(dispatch, \"confirmNewPassword\")}/>\n                  </div>\n                {state.loadingRequests[stringifyRequestName([changePasswordRequestName])] ?\n                  <div className={`dib ma2 br4 pa2 bg-white ba b--light-gray gray`}>\n                    Changing Passwords\n                    <Loading className={\"mh2\"}/>\n                  </div>\n                  :\n                  <div className={\"pointer bg-light-gray ma2 pa2 tc shadow-1 br2\"} onClick={dispatcher.changePassword}>\n                    Change Password\n                  </div>\n                }\n              </div>\n\n              }\n\n              {state.toggles.changeAccessToken &&\n              <div>\n                  <div>\n                    {state.loggedInUser ? state.loggedInUser.access_token : \"\"}\n                  </div>\n                {state.loadingRequests[stringifyRequestName([generateNewAccessTokenRequestName])] ?\n                  <div className={`dib ma2 br4 pa2 bg-white ba b--light-gray gray`}>\n                    Generating Access Tokens\n                    <Loading className={\"mh2\"}/>\n                  </div>\n                  :\n                  <div className={\"pointer bg-light-gray ma2 pa2 tc shadow-1 br2\"}\n                       onClick={dispatcher.generateNewAccessToken}>\n                    Generate New Access Token\n                  </div>\n                }\n              </div>\n              }\n\n              {state.toggles.changeSubscription &&\n              <div>\n                  <StripeSubscription user={state.loggedInUser}/>\n                {StripePlansContent(state)}\n                {state.stripe.object && state.stripe.publishableKey &&\n                <StripeForm apiKey={state.stripe.publishableKey}\n                            onSubmit={dispatcher.changeSubscription}\n                            onError={dispatcher.error}\n                            errors={state.errors.changeAccountSettings}\n                            isLoadingRequest={state.loadingRequests[stringifyRequestName([changeSubscriptionRequestName])]}\n                            loadingMessage=\"Changing Subscription\"\n                            submitMessage=\"Change Subscription\"/>\n                }\n                {isSubscriptionActive &&\n                  <div>\n                    {state.loadingRequests[stringifyRequestName([cancelSubscriptionRequestName])] ?\n                      <div className={`dib ma2 br4 pa2 bg-white ba b--light-gray gray`}>\n                        Cancelling Subscription\n                        <Loading className={\"mh2\"}/>\n                      </div>\n                      :\n                      <div\n                        className=\"bg-light-red white pointer ma2 pa2 tc br2\"\n                        onClick={dispatcher.cancelSubscription}>\n                        Cancel Subscription\n                      </div>\n                    }\n                  </div>\n                }\n              </div>\n              }\n\n            </div>\n            :\n\n            <div>\n              <div className={\"pointer\"} onClick={toggleDispatcher(dispatch, \"showSettingsModal\", false)}>\n                <SVGBack/>\n              </div>\n              <div className={\"pointer pa2 bt b--light-gray hover-bg-light-gray\"}\n                   onClick={toggleDispatcher(dispatch, \"changeEmail\")}>\n                <div>\n                  Change Email\n                </div>\n                <div className={\"gray\"}>\n                  {state.loggedInUser ? state.loggedInUser.email : \"\"}\n                </div>\n              </div>\n              <div className={\"pointer pa2 bt b--light-gray hover-bg-light-gray\"}\n                   onClick={toggleDispatcher(dispatch, \"changePassword\")}>\n                Change Password\n              </div>\n              <div className={\"pointer pa2 bt b--light-gray hover-bg-light-gray\"}\n                   onClick={toggleDispatcher(dispatch, \"changeAccessToken\")}>\n                <div>\n                  Change Access Token\n                </div>\n                <div className={\"gray\"}>\n                  {state.loggedInUser ? state.loggedInUser.access_token : \"\"}\n                </div>\n              </div>\n              <div className={\"pointer pa2 bt b--light-gray hover-bg-light-gray\"}\n                   onClick={toggleDispatcher(dispatch, \"changeSubscription\")}>\n                <div>\n                  Update Subscription\n                </div>\n                <div className={\"gray\"}>\n                  <StripeSubscription user={state.loggedInUser}/>\n                </div>\n              </div>\n            </div>\n          }\n\n        </form>\n      </div>\n    );\n  }\n}\n","import * as React from 'react'\nimport {ClassAndChildren} from \"../core/reducers\";\nimport {ChordType} from \"../reducers/recompute-chord-grid\";\nimport {SVGStar} from \"./svgs\";\nimport {SyntheticEvent} from \"react\";\n\ninterface ChordElementProps extends ClassAndChildren {\n  chord: ChordType\n  notes: number[]\n  audioContext: AudioContext\n  onSelect: () => void\n  waveType: OscillatorType\n  soundOn: boolean\n  isSelected: boolean\n  isSuggested: boolean\n  onStar: () => void\n  onHover: (show: boolean) => void\n  showStar: boolean\n  isStarred: boolean\n}\n\nexport class ChordElement extends React.Component<ChordElementProps> {\n  clickHandled = false;\n\n  render() {\n    let highlightColor;\n\n    if (this.props.isSelected) {\n      highlightColor = 'shadow-2-skyblue';\n    } else if (this.props.isSuggested) {\n      highlightColor = 'shadow-2-red';\n    }\n\n    return (\n      <div\n        className={`${this.props.chord.variation === 0 ? \"bg-gray light-gray\" : \"bg-light-gray dark-gray\"}\n            ${highlightColor}\n             w3 h3 dib tc v-mid pointer ma2 pt3 br3 relative shadow-4`}\n        // style={{backgroundColor: this.getColor()}}\n        onMouseDown={this.onClick}\n        onMouseUp={this.onClickEnd}\n        onTouchStart={this.onClick}\n        onMouseEnter={()=>this.props.onHover(true)}\n        onMouseLeave={()=>this.props.onHover(false)}\n      >\n        <div className=\"\">\n          {this.props.chord.baseKey + this.props.chord.symbol}\n        </div>\n        {this.props.chord.variation > 0 &&\n        <div>\n          {this.props.chord.variation}\n        </div>\n        }\n        {this.props.showStar &&\n        <div className={`absolute top-0 left-0 ${this.props.isStarred ? 'fill-gold' : 'stroke-gold fill-none'}`} onClick={this.props.onStar}>\n            <SVGStar/>\n        </div>\n        }\n        <div className=\"absolute bottom-0 right-5px o-70 f6\">\n          o{this.props.chord.octave}\n        </div>\n        {this.props.children}\n      </div>\n    );\n  }\n\n  onClickEnd = (e: SyntheticEvent<any>) => {\n    this.clickHandled = false;\n  };\n\n  onClick = (e: SyntheticEvent<any>) => {\n    if (this.clickHandled) {\n      return;\n    }\n\n    if (e.type === \"touchstart\") {\n      this.clickHandled = true;\n    }\n\n    this.props.onSelect();\n  };\n\n  normalize = (x: number, minX: number, maxX: number, minY: number, maxY: number) => {\n    return ((x - minX) / (maxX - minX)) * (maxY - minY) + minY;\n  };\n\n  getColor = () => {\n    let totalFrequency = 0;\n    this.props.chord.pitchClass.map(pitch => {\n      let noteFrequency = this.props.notes[pitch];\n      if (totalFrequency === 0) {\n        totalFrequency = noteFrequency\n      } else {\n        totalFrequency = 2 * Math.sin((totalFrequency + noteFrequency) / 2) * Math.cos((totalFrequency - noteFrequency) / 2);\n      }\n      return noteFrequency;\n    });\n\n    let normalizedFreq = this.normalize(totalFrequency, -1, 2, 0, 16777215);\n    normalizedFreq = Math.floor(normalizedFreq);\n    return `#${normalizedFreq.toString(16)}`;\n  };\n\n}\n","import * as React from 'react';\nimport {State} from \"../../state\";\nimport {Action} from \"../../core/root-reducer\";\nimport {\n  changeKeyboardMap,\n  changeKeyboardPresser,\n  ChordMapperKeys,\n  KeyBoardMapType,\n  KeyBoardPressType,\n  toggleKeyboardKey,\n  clearKeyboard\n} from \"../../reducers/keyboard-reducer\";\nimport {USKeyboardMapperFirstRow, USKeyboardMapperSecondRow} from \"../../core/services/external-input-service\";\nimport {OutputSource} from \"../../core/services/midi-service\";\nimport {inputChangeDispatcher} from \"../../reducers/input-reducer\";\n\nexport const SelectedKeyIndicator = () => {\n  return <div className={\"bg-light-red w2 h2 pa2 br-100\"}/>\n};\n\ninterface ComputerKeyboardKeyProps {\n  index: number\n}\n\nexport const ComputerKeyboardKey = (props: ComputerKeyboardKeyProps) => {\n  const firstRowKey = USKeyboardMapperFirstRow[props.index] || \"\";\n  const secondRowKey = USKeyboardMapperSecondRow[props.index] || \"\";\n  const letter = secondRowKey + ' ' + firstRowKey;\n  return letter.trim() &&\n    <div>\n      <div className=\"absolute bg-light-blue h0_125rem top-0 left-0 w-100\"/>\n      <div className=\"absolute bg-light-blue pa1 black top-0 right-0 br2 br--bottom br--left\">\n        {letter.toUpperCase()}\n      </div>\n    </div>\n};\n\nexport function Keyboard(dispatch: (action: Action) => void) {\n\n  let dispatcher = {\n    toggleChordMapperKey: (keyIndex: number) => dispatch(toggleKeyboardKey(keyIndex)),\n    changeKeyBoardMap: (keyboardMap: KeyBoardMapType) => dispatch(changeKeyboardMap(keyboardMap)),\n    changeKeyBoardPresser: (keyboardPresser: KeyBoardPressType) => dispatch(changeKeyboardPresser(keyboardPresser)),\n    clearKeyboard: () => dispatch(clearKeyboard()),\n  };\n\n  const keyboardMappers: KeyBoardMapType[] = ['none', 'keys', 'chords'];\n  const outputSources: OutputSource[] = ['computer', 'midi'];\n  const keyboardPressers: KeyBoardPressType[] = ['hold', 'live'];\n\n  return (state: State) => {\n\n    return (\n      <div className={\"w-100 bg-light-gray dark-gray\"}>\n        <div>\n          <div>\n          Input:\n          {keyboardMappers.map(keyboardMap => {\n            const color = state.inputs.mapKeyboardTo === keyboardMap ? 'light-blue' : 'black';\n            return (\n              <div className={`pointer dib pa1 ${color}`}\n                   onClick={() => dispatcher.changeKeyBoardMap(keyboardMap)}>\n                {keyboardMap}\n              </div>\n            );\n          })}\n        </div>\n        <div className='fr'>\n          On press:\n          {keyboardPressers.map(keyboardPresser => {\n            const color = state.inputs.keyboardPresser === keyboardPresser ? 'light-blue' : 'black';\n            return (\n              <div className={`pointer dib pa1 ${color}`}\n                   onClick={() => dispatcher.changeKeyBoardPresser(keyboardPresser)}>\n                {keyboardPresser}\n              </div>\n            );\n          })}\n        <div className='pointer dib pa1' onClick={dispatcher.clearKeyboard}>\n          clear\n        </div>\n\n        </div>\n        </div>\n\n        <div>\n          Output: \n          {outputSources.map(outputSource => {\n            const color = state.inputs.outputSource === outputSource ? 'light-blue' : 'black';\n            return (\n              <div className={`pointer dib pa1 ${color}`}\n                   onClick={inputChangeDispatcher(dispatch,\"outputSource\", outputSource)}>\n                {outputSource}\n              </div>\n            );\n          })}\n        </div>\n        <div className={\"overflow-x-auto overflow-y-hidden gpu pb1\"}>\n          <div className={\"db nowrap\"}>\n            {ChordMapperKeys.map((blackKey, i) => {\n\n              let width = \"\";\n              if (blackKey === \"G#\" && i < ChordMapperKeys.length - 2) {\n                width = 'w3';\n              } else if (i === 1) {\n                width = 'w4';\n              } else {\n                width = 'w3-5'\n              }\n\n              return blackKey.includes('#') &&\n                <div key={\"black-key-\" + i}\n                     className={`bg-gray light-gray tc ${width} h3 dib v-mid pointer pa3 br b--white relative`}\n                     onClick={() => dispatcher.toggleChordMapperKey(i)}>\n                  {blackKey}\n                  {state.inputs.mapKeyboardTo === 'keys' && <ComputerKeyboardKey index={i}/>}\n                  {state.chordMapperKeys[i] && <SelectedKeyIndicator/>}\n                </div>\n            })}\n          </div>\n\n          <div className={\"db nowrap\"}>\n            {ChordMapperKeys.map((whiteKey, i) => {\n              return !whiteKey.includes('#') &&\n                <div key={\"white-key-\" + i}\n                     className={\"bg-white dark-gray w3 h3 dib tc v-mid pointer pa3 bl b--black relative\"}\n                     onClick={() => dispatcher.toggleChordMapperKey(i)}>\n                  {whiteKey}\n                  {state.inputs.mapKeyboardTo === 'keys' && <ComputerKeyboardKey index={i}/>}\n                  {state.chordMapperKeys[i] && <SelectedKeyIndicator/>}\n                </div>\n            })}\n\n\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n","import { ClassAndChildren } from \"../core/reducers\";\nimport React from \"react\";\n\ninterface ParameterButtonProps extends ClassAndChildren {\n  onClick: () => void\n  disabled?: boolean\n}\n\nexport const ParameterButton = (props: ParameterButtonProps) => {\n  return (\n    <div className={`${props.disabled ? 'bg-light-gray gray  svg-gray' : 'bg-gray light-gray svg-light-gray'} br2 pointer ${props.className}`} onClick={() => {\n      if (!props.disabled) {\n        props.onClick();\n      }\n    }}>\n      {props.children}\n    </div>\n  )\n};","import * as React from 'react';\nimport { State } from \"../../state\";\nimport { ParameterButton } from \"../../components/parameter-button\";\nimport {\n  changeBaseFrequency, changeOctave,\n  MAXIMUM_OCTAVE,\n  MINIMUM_OCTAVE, saveSynthTools, selectWaveType, activateKnob, toggleSound\n} from \"../../reducers/synth-tools-reducer\";\nimport { Action } from \"../../core/root-reducer\";\nimport {\n  SVGCheckMark,\n  SVGMinus,\n  SVGOctave,\n  SVGPlus,\n  SVGSawtooth,\n  SVGSine, SVGSoundOff,\n  SVGSoundOn,\n  SVGSquare,\n  SVGTriangle\n} from \"../../components/svgs\";\nimport { ClassAndChildren } from \"../../core/reducers\";\nimport { SynthResource } from \"../../resources/synth-resource\";\nimport {Input} from \"../../components/input\";\nimport {changeKeyboardMap, KeyBoardMapType} from '../../reducers/keyboard-reducer';\n\nexport interface KnobProps {\n  value: number\n  max: number\n  min: number\n  activateKnob: () => void\n}\n\nexport function Knob(props: KnobProps) {\n  return <div className=\"br-100 b--gray ba w2 h2 mh2 pointer relative\"\n    onMouseDown={props.activateKnob}>\n    <div className=\"absolute h-100 left-50\" style={{ transform: `rotate(${360 * props.value / (props.max - props.min)}deg)` }}>\n      <div className=\"h-50\" />\n      <div className=\"h-50 ba b--gray\" />\n    </div>\n  </div>\n}\n\nexport interface SliderProps {\n  value: number\n  max: number\n  min: number\n  activateKnob: () => void\n}\n\nexport function Slider(props: SliderProps) {\n  return <div className=\"w2 h2 mh2 relative\">\n    <div className=\"absolute h-100 ba b--gray left-50\" />\n    <div className=\"absolute w-50 pointer left-25\"\n      style={{ bottom: `${100 * props.value / (props.max - props.min)}%` }}\n      onMouseDown={props.activateKnob}>\n      <div className=\"ba b--gray\" />\n    </div>\n  </div>\n}\n\nexport function SynthTools(dispatch: (action: Action) => void) {\n\n  let dispatcher = {\n    decreaseOctave: () => dispatch(changeOctave(\"decrease\")),\n    increaseOctave: () => dispatch(changeOctave(\"increase\")),\n    changeBaseFrequency: (freq: number) => dispatch(changeBaseFrequency(freq)),\n    selectWaveType: (waveType: OscillatorType) => dispatch(selectWaveType(waveType)),\n    toggleSound: () => dispatch(toggleSound()),\n    saveSynthTools: () => dispatch(saveSynthTools()),\n    activateKnob: (knobKey: keyof SynthResource) => dispatch(activateKnob(knobKey)),\n    changeKeyBoardMap: (keyboardMap: KeyBoardMapType) => dispatch(changeKeyboardMap(keyboardMap)),\n  };\n\n  interface WaveTypeProps extends ClassAndChildren {\n    waveType: OscillatorType\n    currentWaveType: OscillatorType\n  }\n\n  const WaveType = (props: WaveTypeProps) => {\n    let isSelected = props.waveType === props.currentWaveType;\n    return (\n      <div className={`dib ma1 pointer ${isSelected ? \" svg-light-blue\" : \"\"}`}\n        onClick={() => dispatcher.selectWaveType(props.waveType)}>\n        {props.children}\n      </div>\n    )\n  };\n\n  let octaves: number[] = [];\n  for (let i = MINIMUM_OCTAVE; i <= MAXIMUM_OCTAVE; i++) {\n    octaves.push(i);\n  }\n\n  return (state: State) => {\n    return (\n      <div className={\"h3 w-100 bg-light-gray flex flex-row items-stretch svg-dim-gray\"}>\n        <ParameterButton className={\"w2 h2 pa2 ma2\"} disabled={state.synth.base_octave === MINIMUM_OCTAVE}\n          onClick={dispatcher.decreaseOctave}>\n          <SVGMinus />\n        </ParameterButton>\n        <div className={\"pv2 dark-gray\"}>\n          {octaves.map(octave => {\n            return <SVGOctave key={`octave-${octave}`}\n              className={`ma1 ${octave === state.synth.base_octave ? \"svg-green-yellow\" : \"svg-gray fill-none\"}`} />\n          })}\n        </div>\n        <ParameterButton className={\"w2 h2 pa2 ma2\"} disabled={state.synth.base_octave === MAXIMUM_OCTAVE}\n          onClick={dispatcher.increaseOctave}>\n          <SVGPlus />\n        </ParameterButton>\n\n        <div className={\"ma2 pa2 dark-gray\"}>\n          <WaveType waveType={\"sine\"} currentWaveType={state.synth.vco_signal}>\n            <SVGSine />\n          </WaveType>\n          <WaveType waveType={\"triangle\"} currentWaveType={state.synth.vco_signal}>\n            <SVGTriangle />\n          </WaveType>\n          <WaveType waveType={\"sawtooth\"} currentWaveType={state.synth.vco_signal}>\n            <SVGSawtooth />\n          </WaveType>\n          <WaveType waveType={\"square\"} currentWaveType={state.synth.vco_signal}>\n            <SVGSquare />\n          </WaveType>\n        </div>\n\n        <div className={\"dark-gray\"}>\n          <Input type={\"number\"} className={\"bg-transparent border-less w3 color-inherit tc pointer\"}\n            value={state.synth.base_frequency}\n            onFocus={() => dispatcher.changeKeyBoardMap(\"none\")}\n            onBlur={()=> dispatcher.changeKeyBoardMap(state.keyboardMapPriorToInput)}\n            onChange={(e) => dispatcher.changeBaseFrequency(parseInt(e.target.value))} />\n          Hz\n        </div>\n\n        <div className={\"pa2 dark-gray\"}>\n          <div className={`dib ma1 pointer`}\n            onClick={dispatcher.toggleSound}>\n            {state.synth.sound_on ? <SVGSoundOn /> : <SVGSoundOff />}\n          </div>\n        </div>\n\n        <div>\n          <Knob value={state.synth.cut_off_frequency}\n            max={state.limits.cut_off_frequency.max} min={state.limits.cut_off_frequency.min}\n            activateKnob={() => dispatcher.activateKnob(\"cut_off_frequency\")}\n          />\n        </div>\n\n        <div>\n          <Slider value={parseFloat(state.synth.attack + \"\")}\n            max={state.limits.attack.max} min={state.limits.attack.min}\n            activateKnob={() => dispatcher.activateKnob(\"attack\")}\n          />\n        </div>\n\n        <div>\n          <Slider value={parseFloat(state.synth.release + \"\")}\n            max={state.limits.release.max} min={state.limits.release.min}\n            activateKnob={() => dispatcher.activateKnob(\"release\")}\n          />\n        </div>\n\n        <div className=\"pa2\">\n          <div className=\"dib \">\n            {deepEqual(state.loggedInUser && state.loggedInUser.latest_synth, state.synth) ?\n              <div className=\"svg-gray b b--dark-gray br2\">\n                <SVGCheckMark />\n              </div>\n              :\n              <div className=\"pointer bg-gray white svg-white pa1 b b--dark-gray br2\" onClick={dispatcher.saveSynthTools}>\n                Save Synth\n              </div>\n            }\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nconst deepEqual = (obj1, obj2) => {\n  if(!obj1 || !obj2) return false;\n  for (let key in obj1) {\n    if (obj2[key] !== obj1[key]) {\n      return false;\n    }\n  }\n  return true;\n};\n","import { State } from \"../state\";\nimport { ReductionWithEffect } from \"../core/reducers\";\nimport { Action } from \"../core/root-reducer\";\n\nexport type SelectKeyAction = {\n  type: \"select-key\"\n  keyIndex: number\n}\n\nexport const selectKey = (keyIndex: number): SelectKeyAction => {\n  return {\n    type: \"select-key\",\n    keyIndex\n  };\n};\n\nexport type ChordCanvasActions =\n  SelectKeyAction;\n\n\nexport const reduceChordCanvas = (state: State, action: Action): ReductionWithEffect<State> => {\n  switch (action.type) {\n    case \"select-key\": {\n      let keyIndex = action.keyIndex;\n\n      state = { ...state };\n      state.selectedKeyIndex = keyIndex;\n      break;\n    }\n  }\n\n  return { state };\n};\n","import React from \"react\";\nimport {ClassAndChildren} from \"../core/reducers\";\n\ninterface NoteKeyProps extends ClassAndChildren {\n  keyIndex: number\n  baseKey: string\n  selectKey: (keyIndex: number) => void\n  isSuggested: boolean\n  isSelected: boolean\n}\n\nexport const NoteKey = (props: NoteKeyProps) => {\n  return <div\n      className={`${props.baseKey.includes('#') ? 'bg-gray light-gray' : 'bg-light-gray black'}\n      ${props.isSuggested ? \"shadow-2-red\" : \"\"}\n       w3 h3 dib tc v-mid pointer ma2 pa3 br3`}\n              onClick={() => props.selectKey(props.keyIndex)}>\n    {props.baseKey}\n  </div>\n};","import * as React from \"react\";\nimport {ClassAndChildren} from \"../core/reducers\";\n\nexport function Page(props: ClassAndChildren) {\n  return <div className=\"w-100 h-100 flex flex-column overflow-hidden\">\n    {props.children}\n  </div>\n}","import * as React from \"react\";\nimport {SynthTools} from \"./synth-tools\";\nimport {ChordGrid} from \"./chord-grid\";\nimport {Keyboard} from \"./keyboard\";\nimport {State} from \"../../state\";\nimport {Action} from \"../../core/root-reducer\";\nimport {ChordKeySelector} from \"./chord-key-selector\";\nimport {Page} from \"../../components/page\";\n\n\nexport function ChordsPage(dispatch: (action: Action) => void) {\n\n  let ChordToolsContent = SynthTools(dispatch);\n  let ChordCanvasContent = ChordGrid(dispatch);\n  let ChordKeySelectorContent = ChordKeySelector(dispatch);\n  let KeyboardContent = Keyboard(dispatch);\n\n  return (state: State) => {\n    return (\n      <Page>\n        {ChordToolsContent(state)}\n        {ChordKeySelectorContent(state)}\n        {ChordCanvasContent(state)}\n        {KeyboardContent(state)}\n      </Page>\n    );\n  }\n}","import {ChordElement} from \"../../components/chord\";\nimport React from \"react\";\nimport {State} from \"../../state\";\nimport {chordIdentifier, ChordType} from \"../../reducers/recompute-chord-grid\";\nimport {Action} from \"../../core/root-reducer\";\nimport {selectChordAction} from \"../../reducers/keyboard-reducer\";\nimport {showStar, toggleDraftChord} from \"../../reducers/footer-reducer\";\n\n\nexport function ChordGrid(dispatch: (action: Action) => void) {\n\n  let dispatcher = {\n    toggleDraftChord: (chord: ChordType) => dispatch(toggleDraftChord(chord)),\n    showStar: (chord: ChordType, show: boolean) => dispatch(showStar(chord, show)),\n    selectChord: (chord: ChordType) => dispatch(selectChordAction(chord)),\n  };\n\n  return (state: State) => {\n    return (\n      <div className={\"overflow-hidden h-100\"}>\n        <div className={\"overflow-auto h-100\"}>\n          {state.selectedKeyIndex != null &&\n          state.chordGrid.map((chord, chordIndex) => {\n            if (chord.variation !== 0) return null;\n            let variations = state.chordGrid.slice(chordIndex + 1, chordIndex + chord.pitchClass.length);\n            return <div key={\"chord-\" + chordIndex}>\n              <ChordElement\n                chord={chord}\n                notes={state.notes}\n                audioContext={state.audioContext}\n                isSelected={!!state.selectedGridChord && chordIdentifier(state.selectedGridChord) === chordIdentifier(chord)}\n                isSuggested={state.suggestedGridChords.filter(c => chordIdentifier(c) === chordIdentifier(chord)).length > 0}\n                onSelect={() => dispatcher.selectChord(chord)}\n                waveType={state.waveType}\n                soundOn={state.soundOn}\n                onStar={() => dispatcher.toggleDraftChord(chord)}\n                onHover={(show) => dispatcher.showStar(chord, show)}\n                showStar={!!state.showStarChord && chordIdentifier(state.showStarChord) === chordIdentifier(chord)}\n                isStarred={state.draftChords.filter(c => chordIdentifier(c) === chordIdentifier(chord)).length > 0}\n\n              />\n              {variations.map(variation => {\n                return <ChordElement\n                  key={\"chord-\" + chordIdentifier(variation)}\n                  chord={variation}\n                  notes={state.notes}\n                  audioContext={state.audioContext}\n                  isSelected={!!state.selectedGridChord && chordIdentifier(state.selectedGridChord) === chordIdentifier(variation)}\n                  isSuggested={state.suggestedGridChords.filter(c => chordIdentifier(c) === chordIdentifier(variation)).length > 0}\n                  onSelect={() => dispatcher.selectChord(variation)}\n                  waveType={state.waveType}\n                  soundOn={state.soundOn}\n                  onStar={() => dispatcher.toggleDraftChord(variation)}\n                  onHover={(show) => dispatcher.showStar(variation, show)}\n                  showStar={!!state.showStarChord && chordIdentifier(state.showStarChord) === chordIdentifier(variation)}\n                  isStarred={state.draftChords.filter(c => chordIdentifier(c) === chordIdentifier(variation)).length > 0}\n                />\n              })\n              }\n            </div>\n          })\n          }\n        </div>\n      </div>\n    );\n  }\n}","import {Action} from \"../../core/root-reducer\";\nimport {selectKey} from \"../../reducers/chord-grid-reducer\";\nimport {KEYS} from \"../../reducers/recompute-chord-grid\";\nimport {State} from \"../../state\";\nimport {NoteKey} from \"../../components/note-key\";\nimport React from \"react\";\n\nexport function ChordKeySelector(dispatch: (action: Action) => void) {\n\n  let dispatcher = {\n    selectKey: (keyIndex: number) => dispatch(selectKey(keyIndex)),\n  };\n\n  return (state: State) => {\n    return (\n      <div className={\"w-100\"}>\n        {KEYS.map((key, keyIndex) => {\n          return <NoteKey key={\"note-key-\" + keyIndex}\n                          baseKey={key} keyIndex={keyIndex}\n                          isSuggested={state.suggestedKeyIndexes.indexOf(keyIndex) !== -1}\n                          isSelected={state.selectedKeyIndex === keyIndex}\n                          selectKey={dispatcher.selectKey}/>\n        })}\n      </div>\n    )\n  }\n}","import { Action } from \"../core/root-reducer\";\nimport { State } from \"../state\";\nimport { Effect } from \"../core/services/services\";\nimport { calculateMML } from \"../utils/mml-utils\";\n\nexport type AddChordAndLyricAction = {\n  type: \"add-chord-and-lyric\"\n  songId: string\n}\n\nexport const addChordAndLyric = (songId = \"\"): AddChordAndLyricAction => {\n  return {\n    type: \"add-chord-and-lyric\",\n    songId\n  }\n};\n\nexport type SongPageActions =\n  AddChordAndLyricAction;\n\nexport const reduceSongPage = (state: State, action: Action) => {\n  let effects: Effect[] = [];\n\n  switch (action.type) {\n    case \"add-chord-and-lyric\": {\n      state = { ...state };\n      state.newSong = { ...state.newSong };\n      state.newSong.chordsAndLyrics = state.newSong.chordsAndLyrics.slice();\n      if (!state.selectedGridChord) break;\n      state.newSong.chordsAndLyrics.push({ chord: calculateMML(state.selectedGridChord), lyric: state.inputs.lyric });\n      break;\n    }\n  }\n  return { state, effects };\n};","import * as React from \"react\";\nimport {Header} from \"./header\";\nimport {Footer} from \"./footer\";\nimport {State} from \"../../state\";\nimport {Action} from \"../../core/root-reducer\";\nimport {ChordsPage} from \"../chords/chords-page\";\nimport {SongPage} from \"../song/song-page\";\nimport {Page} from \"../../components/page\";\n\n\nexport function HomePage(dispatch: (action: Action) => void) {\n\n  let HeaderContent = Header(dispatch);\n  let ChordPageContent = ChordsPage(dispatch);\n  let SongPageContent = SongPage(dispatch);\n  let FooterContent = Footer(dispatch);\n\n  return (state: State) => {\n    return (\n      <Page>\n        {HeaderContent(state)}\n        {state.pathParts[1] === \"chords\" && ChordPageContent(state)}\n        {state.pathParts[1] === \"song\" && SongPageContent(state)}\n        {FooterContent(state)}\n      </Page>\n    );\n  }\n}","import React from \"react\";\nimport {State} from \"../../state\";\nimport {\n  goToHomePage,\n} from \"../../reducers/header-reducer\";\nimport {Action} from \"../../core/root-reducer\";\nimport {LogIn} from \"../log-in/log-in\";\nimport {toggleDispatcher} from \"../../reducers/toggle-reducer\";\nimport {UserInfoModal} from \"./user-info\";\nimport {PathPart} from \"../../reducers/router-reducer\";\nimport {\n  SVGChords,\n  SVGSong,\n  SVGUser\n} from \"../../components/svgs\";\nimport {HeaderTitle} from \"../../components/header-title\";\n\nexport function Header(dispatch: (action: Action) => void) {\n\n  let dispatcher = {\n    goToHomePage: (page: PathPart) => dispatch(goToHomePage(page)),\n  };\n\n  const LogInContent = LogIn(dispatch);\n  const UserInfoModalContent = UserInfoModal(dispatch);\n\n\n  return (state: State) => {\n\n    const showUserModal = state.toggles.showLogInModal || state.toggles.showTemporaryUserModal;\n\n    return (\n      <div className={\"h3 w-100 bg-light-gray flex flex-row items-stretch  svg-dim-gray\"}>\n\n        <HeaderTitle/>\n\n        <div className={\"ma2 pa2 dark-gray\"}>\n          <div className={`db pointer ${showUserModal ? \"svg-light-blue\" : \"svg-dim-gray\"}`}\n               onClick={toggleDispatcher(dispatch, \"showLogInModal\")}>\n            <SVGUser/>\n          </div>\n          {showUserModal &&\n          <div className={\"ma3 pa3 ba br3 w5 b--light-gray shadow-1 absolute bg-white nl6\"}>\n            {state.toggles.showTemporaryUserModal && <div>\n              {state.errors.server && state.errors.server.length > 0 &&\n              state.errors.server.map(error => {\n                return <div key={\"server-error-\" + error.message}\n                            className=\"red\">\n                  {error.message}\n                </div>\n\n              })}\n              {state.success.signIn &&\n              <div className={\"green\"}>\n                {state.success.signIn}\n              </div>\n              }\n\n            </div>\n            }\n\n            {state.toggles.showLogInModal && <div>\n              {state.loggedInUser ?\n                UserInfoModalContent(state)\n                :\n                LogInContent(state)\n              }\n            </div>\n            }\n          </div>\n          }\n        </div>\n\n        <div className={\"ma2 pa2 dark-gray\"}>\n          <div className={`pointer ${state.pathParts[1] === 'chords' ? \"svg-light-blue\" : \"\"}`}\n               onClick={() => dispatcher.goToHomePage(\"chords\")}>\n            <SVGChords/>\n          </div>\n        </div>\n\n        <div className={\"ma2 pa2 dark-gray\"}>\n          <div className={`pointer ${state.pathParts[1] === 'song' ? \"svg-light-blue\" : \"\"}`}\n               onClick={() => dispatcher.goToHomePage(\"song\")}>\n            <SVGSong/>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}","import * as React from \"react\";\nimport {State} from \"../../state\";\nimport {Action} from \"../../core/root-reducer\";\nimport {Input} from \"../../components/input\";\nimport {inputChangeDispatcher} from \"../../reducers/input-reducer\";\nimport {addChordAndLyric} from \"../../reducers/song-page-reducer\";\nimport {Page} from \"../../components/page\";\nimport {changeKeyboardMap, KeyBoardMapType} from '../../reducers/keyboard-reducer';\n\nexport function SongPage(dispatch: (action: Action) => void) {\n\n  const dispatcher = {\n    addChordAndLyric: () => dispatch(addChordAndLyric()),\n    changeKeyBoardMap: (keyboardMap: KeyBoardMapType) => dispatch(changeKeyboardMap(keyboardMap)),\n  };\n\n  return (state: State) => {\n    return (\n      <Page>\n        {state.newSong ?\n          <div>\n            <div>\n              Title: {state.newSong.title}\n            </div>\n            <div>\n              Author: {state.newSong.author}\n            </div>\n            <div>\n              Date: {state.newSong.created_at}\n            </div>\n\n            <div>\n              Song\n              {state.newSong.chordsAndLyrics && state.newSong.chordsAndLyrics.map((chordAndLyric, i) => {\n                return <div key={`chord-and-lyric-${i}`}>\n                  <div>\n                    {chordAndLyric.chord}\n                  </div>\n                  <div>\n                    {chordAndLyric.lyric}\n                  </div>\n                </div>;\n              })}\n              <Input value={state.inputs.lyric} onChange={inputChangeDispatcher(dispatch, \"lyric\")}\n                onFocus={() => dispatcher.changeKeyBoardMap(\"none\")}\n                onBlur={()=> dispatcher.changeKeyBoardMap(state.keyboardMapPriorToInput)}\n              />\n              <div className={\"bg-light-gray pa2 br2 w2 h2 tc pointer\"} onClick={dispatcher.addChordAndLyric}>\n                +\n              </div>\n            </div>\n          </div>\n          : <div/>\n        }\n\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport {State} from \"../../state\";\nimport {\n  toggleDraftChord,\n  selectSavedChord, showStar,\n} from \"../../reducers/footer-reducer\";\nimport {ChordElement} from \"../../components/chord\";\nimport {chordIdentifier, ChordType} from \"../../reducers/recompute-chord-grid\";\nimport {Action} from \"../../core/root-reducer\";\nimport {ComputerKeyboardKey} from \"../chords/keyboard\";\n\nexport function Footer(dispatch: (action: Action) => void) {\n\n  let dispatcher = {\n    onSelectSavedChord: (savedChordIndex: number) => dispatch(selectSavedChord(savedChordIndex)),\n    toggleDraftChord: (chord: ChordType) => dispatch(toggleDraftChord(chord)),\n    showStar: (chord: ChordType, show: boolean) => dispatch(showStar(chord, show)),\n  };\n\n  return (state: State) => {\n    return (\n      <div className={\"w-100 bg-light-gray dark-gray h4 flex flex-row items-stretch\"}>\n        <div className={\"dib overflow-y-hide-show h-100\"}>\n          {state.draftChords.map((savedChord, s) => {\n            return <ChordElement key={\"saved-chord-\" + s}\n                                 chord={savedChord}\n                                 notes={state.notes}\n                                 audioContext={state.audioContext}\n                                 waveType={state.waveType}\n                                 soundOn={state.soundOn}\n                                 onSelect={() => dispatcher.onSelectSavedChord(s)}\n                                 isSelected={!!state.selectedGridChord && chordIdentifier(state.selectedGridChord) === chordIdentifier(savedChord)}\n                                 isSuggested={state.suggestedGridChords.filter(c => chordIdentifier(c) === chordIdentifier(savedChord)).length > 0}\n                                 onStar={() => dispatcher.toggleDraftChord(savedChord)}\n                                 onHover={(show) => dispatcher.showStar(savedChord, show)}\n                                 showStar={!!state.showStarChord && chordIdentifier(state.showStarChord) === chordIdentifier(savedChord)}\n                                 isStarred={state.draftChords.filter(c => chordIdentifier(c) === chordIdentifier(savedChord)).length > 0}\n            >\n              {state.inputs.mapKeyboardTo === 'chords' && <ComputerKeyboardKey index={s} />}\n            </ChordElement>\n          })}\n        </div>\n\n      </div>\n    );\n  }\n}","import React from \"react\";\nimport {State} from \"../state\";\nimport {HomePage} from \"./home/home-page\";\nimport {SignUpPage} from \"./log-in/sign-up-page\";\nimport {Action} from \"../core/root-reducer\";\n\n\nexport function RootPage(dispatch: (action: Action) => void) {\n\n  const HomeContent = HomePage(dispatch);\n  const SignUpContent = SignUpPage(dispatch);\n  return (state: State) => {\n    return (\n        <div className={\"h-100\"}>\n          {function() {\n            switch(state.pathParts[0]) {\n              case \"sign-up\":\n                return SignUpContent(state);\n\n              case \"home\":\n                return HomeContent(state);\n\n              default:\n                return \"404 Not Found\";\n            }\n          }()}\n        </div>\n    );\n  }\n}","import * as React from \"react\";\nimport {State} from \"../../state\";\nimport {Action} from \"../../core/root-reducer\";\nimport {inputChangeDispatcher} from \"../../reducers/input-reducer\";\nimport {\n  chooseStripePlan,\n  errorOnSignUp, ResponseError,\n  signUp,\n  userSignUpRequestName\n} from \"../../reducers/login-reducer\";\nimport {Input} from \"../../components/input\";\nimport {HeaderTitle} from \"../../components/header-title\";\nimport {Page} from \"../../components/page\";\nimport {stringifyRequestName} from \"../../reducers/complete-request-reducer\";\nimport {SVGCheckMark} from \"../../components/svgs\";\nimport {StripePlans} from \"../../components/stripe-plans\";\nimport {StripeForm} from \"../../components/stripe-form\";\nimport {changeKeyboardMap, KeyBoardMapType} from '../../reducers/keyboard-reducer';\n\n\nexport function SignUpPage(dispatch: (action: Action) => void) {\n  const dispatcher = {\n    signUp: (token_id: string) => dispatch(signUp(token_id)),\n    error: (error: ResponseError) => dispatch(errorOnSignUp(error)),\n    choosePlan: (stripePlanId: string) => dispatch(chooseStripePlan(stripePlanId)),\n    changeKeyBoardMap: (keyboardMap: KeyBoardMapType) => dispatch(changeKeyboardMap(keyboardMap)),\n  };\n\n  const StripePlansContent = StripePlans(dispatch);\n\n  return (state: State) => {\n    return (\n      <Page>\n        <HeaderTitle/>\n\n        <div className={\"ma3 pa3 ba br3 w6 b--light-gray shadow-1\"}>\n          <div className={\"db ma2\"}>\n            <div>\n              Email:\n            </div>\n            <Input type=\"email\" value={state.inputs.email} onChange={inputChangeDispatcher(dispatch, \"email\")}\n              onFocus={() => dispatcher.changeKeyBoardMap(\"none\")}\n              onBlur={()=> dispatcher.changeKeyBoardMap(state.keyboardMapPriorToInput)}\n            />\n          </div>\n          <div className={\"db ma2\"}>\n            <div>\n              Password:\n            </div>\n            <Input type=\"password\" value={state.inputs.password}\n            onFocus={() => dispatcher.changeKeyBoardMap(\"none\")}\n            onBlur={()=> dispatcher.changeKeyBoardMap(state.keyboardMapPriorToInput)}\n                   onChange={inputChangeDispatcher(dispatch, \"password\")}/>\n          </div>\n          <div className={\"db ma2\"}>\n            <div>\n              Confirm Password:\n            </div>\n            <Input type=\"password\" value={state.inputs.confirmPassword}\n            onFocus={() => dispatcher.changeKeyBoardMap(\"none\")}\n            onBlur={()=> dispatcher.changeKeyBoardMap(state.keyboardMapPriorToInput)}\n                   onChange={inputChangeDispatcher(dispatch, \"confirmPassword\")}/>\n            {state.inputs.password && state.inputs.password === state.inputs.confirmPassword &&\n            <SVGCheckMark className={\"svg-green\"}/>\n            }\n          </div>\n          {state.stripe.object && state.stripe.publishableKey && <div>\n            {StripePlansContent(state)}\n              <StripeForm apiKey={state.stripe.publishableKey}\n                          submitMessage=\"Sign Up\" loadingMessage=\"Signing Up\"\n                          onSubmit={dispatcher.signUp} onError={dispatcher.error}\n                          errors={state.errors.signUp}\n                          isLoadingRequest={state.loadingRequests[stringifyRequestName([userSignUpRequestName])]}\n              />\n          </div>\n          }\n        </div>\n      </Page>\n    );\n  }\n}\n","import {AjaxAction, RequestAjaxEffect, withAjax} from \"./ajax-service\";\nimport {inferBasePath, NavigationEffect, withHistory} from \"./navigation-service\";\nimport {Action} from \"../root-reducer\";\nimport {ClearInputDebouncing} from \"./input-debouncing-service\";\nimport {GetStripeEffect, withStripe} from \"./stripe-service\";\nimport {SetTimerEffect, withTimer} from \"./timer-service\";\nimport {ExternalInputEffects, withExternalInput} from \"./external-input-service\";\nimport { PlaySoundEffect, withSound } from \"./sound-service\";\nimport {MouseEffects, withMouseMovements} from \"./mouse-movements-service\";\nimport {MidiEffects, withMidiInput} from \"./midi-service\";\nlet createBrowserHistory = require(\"history\").createBrowserHistory;\n\nexport type Effect =\n  RequestAjaxEffect\n  | NavigationEffect\n  | ClearInputDebouncing\n  | GetStripeEffect\n  | SetTimerEffect\n  | PlaySoundEffect\n  | ExternalInputEffects\n  | MouseEffects\n  | MidiEffects\n  ;\n\nexport type Services = (effect: Effect) => void\n\nexport type ServicesActions =\n  AjaxAction\n  ;\nexport function getCoreServices(dispatch: (action: Action) => void): Services[] {\n  let services: Services[] = [];\n\n  services.push(withAjax(dispatch));\n  services.push(withHistory(dispatch, createBrowserHistory({basename: inferBasePath()})));\n  services.push(withStripe(dispatch));\n  services.push(withTimer(dispatch));\n  services.push(withExternalInput(dispatch));\n  services.push(withMidiInput(dispatch));\n  services.push(withSound(dispatch));\n  services.push(withMouseMovements(dispatch));\n\n  return services;\n}\n","import {memoizeBySomeProperties} from \"../utils/memoizers\";\nimport {initialState} from \"../state\";\n\nexport const NUMBER_OF_NOTES = 88;\n\nexport const recomputeAllNotes = memoizeBySomeProperties({\n  synth: initialState.synth,\n}, (state) => {\n  let notes = [];\n\n  for (let n = 0; n < NUMBER_OF_NOTES; n++) {\n    notes[n] = Math.pow(2, ((n + 1) - 49) / 12) * state.synth.base_frequency;\n  }\n\n  return notes;\n});","import {computedFor, reducerChain, subReducersFor} from \"./reducers\";\nimport {reduceNavigation} from \"../reducers/router-reducer\";\nimport {InputChange, reduceInputs} from \"../reducers/input-reducer\";\nimport {LogInActions, reduceLogin} from \"../reducers/login-reducer\";\nimport {HeaderActions, reduceHeader} from \"../reducers/header-reducer\";\nimport {ChordToolsActions, reduceChordTools} from \"../reducers/synth-tools-reducer\";\nimport {FooterActions, reduceFooter} from \"../reducers/footer-reducer\";\nimport {ChordCanvasActions, reduceChordCanvas} from \"../reducers/chord-grid-reducer\";\nimport {recomputeAllNotes} from \"../reducers/recompute-all-notes\";\nimport {recomputeChordGrid} from \"../reducers/recompute-chord-grid\";\nimport {State} from \"../state\";\nimport {ServicesActions} from \"./services/services\";\nimport {NavigationActions} from \"./services/navigation-service\";\nimport {reduceStripe, StripeActions} from \"../reducers/stripe-reducer\";\nimport {reduceToggle, ToggleAction} from \"../reducers/toggle-reducer\";\nimport {ChordMapperActions, reduceChordMapper} from \"../reducers/keyboard-reducer\";\nimport {reduceSongPage, SongPageActions} from \"../reducers/song-page-reducer\";\nimport {reduceCompleteRequest} from \"../reducers/complete-request-reducer\";\nimport {MidiActions} from \"./services/midi-service\";\n\nconst subReducer = subReducersFor<State>();\nconst computed = computedFor<State>();\n\nexport type Action =\n  ServicesActions\n  | HeaderActions\n  | ChordCanvasActions\n  | FooterActions\n  | ChordToolsActions\n  | NavigationActions\n  | InputChange\n  | ToggleAction\n  | LogInActions\n  | StripeActions\n  | ChordMapperActions\n  | SongPageActions\n  | MidiActions\n  ;\n\n\nexport const rootReducer = (state: State, action: Action) => {\n  return reducerChain(state, action)\n    .apply(reduceCompleteRequest)\n    .apply(reduceNavigation)\n    .apply(subReducer(\"inputs\", reduceInputs))\n    .apply(subReducer(\"toggles\", reduceToggle))\n    .apply(reduceLogin)\n    .apply(reduceHeader)\n    .apply(reduceChordTools)\n    .apply(reduceFooter)\n    .apply(reduceChordCanvas)\n    .apply(reduceChordMapper)\n    .apply(reduceSongPage)\n    .apply(reduceStripe)\n    .apply(computed(\"notes\", recomputeAllNotes))\n    .apply(computed(\"chordGrid\", recomputeChordGrid))\n    .result();\n};","import React from \"react\";\nimport {Action} from \"./root-reducer\";\nimport {Effect} from \"./services/services\";\n\nexport interface ClassAndChildren {\n  className?: string,\n  children?: React.ReactNode\n}\nexport type IgnoredAction = { type: '' };\nexport type IgnoredSideEffect = { effectType: '' };\nexport type GlobalAction = { type: string };\nexport type SideEffect = { effectType: string };\nexport type ReductionWithEffect<State extends Object> = { state: State, effects?: Effect[] | void};\nexport type Reducer <State> = (state: State, action: Action) => ReductionWithEffect<State>\n\nexport interface ReducerChain<S> {\n  result: () => { state: S, effects: Effect[] }\n  apply: (reducer: Reducer<S>) => ReducerChain<S>\n}\n\nexport function reducerChain<State>(state: State, action: Action,\n                                    effects: Effect[] = []): ReducerChain<State> {\n  const chainer: ReducerChain<State> = {\n    apply: (reducer: Reducer<State>) => {\n      let reduction = reducer(state, action);\n      effects = effects.concat(reduction.effects || []);\n      state = reduction.state;\n      return chainer;\n    },\n\n    result: () => {\n      return {state, effects};\n    }\n  };\n\n  return chainer;\n}\n\nexport function subReducersFor<State>() {\n  return function subReducer<Key extends keyof State>(key: Key, reducer: Reducer<State[Key]>): Reducer<State> {\n    return (state: State, action: Action) => {\n      let reduction = reducer(state[key], action);\n      if (reduction.state !== state[key]) {\n        state = {...(state as any)};\n        state[key] = reduction.state;\n      }\n      return {state, effects: reduction.effects};\n    }\n  }\n}\n\n\nexport function computedFor<State>() {\n  return function computed<Key extends keyof State>(key: Key, compute: (s: State) => State[Key]): Reducer<State> {\n    return (state: State) => {\n      let next = compute(state);\n      if (next !== state[key]) {\n        state = {...(state as any)};\n        state[key] = next;\n      }\n      return {state};\n    }\n  }\n}\n","import React from 'react';\nimport {initialState, State} from \"./state\";\nimport {RootPage} from \"./views/root-page\";\nimport {ClassAndChildren} from \"./core/reducers\";\nimport {Effect, getCoreServices, Services} from \"./core/services/services\";\nimport {visit} from \"./core/services/navigation-service\";\nimport {Action, rootReducer} from \"./core/root-reducer\";\n\nexport class ReactRoot extends React.Component<{}, typeof initialState> {\n\n  services: Services[];\n\n  constructor(props: ClassAndChildren) {\n    super(props);\n    this.state = {...initialState};\n    this.services = getCoreServices(this.dispatch);\n  }\n\n  componentDidMount(): void {\n    this.dispatch(visit(window.location))\n  }\n\n  reduceActions = (state: State, action: Action) => {\n    console.log(\"action\", action);\n    return rootReducer(state, action);\n  };\n\n  reduceEffects = (effects: Effect[]) => {\n    effects.map(effect => {\n      console.log(\"effect\", effect);\n      return this.services.map(service => {\n        return service(effect);\n      })\n    })\n  };\n\n  dispatch = (action: Action) => {\n    let oldState = {...this.state};\n    let reduction = this.reduceActions(oldState, action);\n    this.setState(reduction.state, () => {\n      console.log(\"newState\", this.state);\n      this.reduceEffects(reduction.effects);\n    });\n  };\n\n  render() {\n    let state: State = {...this.state};\n    let RootPageContent = RootPage(this.dispatch);\n    return RootPageContent(state);\n  }\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport * as serviceWorker from './serviceWorker';\nimport {ReactRoot} from \"./react-root\";\n\nReactDOM.render(<ReactRoot />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}